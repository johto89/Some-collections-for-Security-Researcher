<#
    Author: Johto Robbie
    License: GPLv3
#>

param (
    [Parameter(Mandatory = $true)]
    [string]$projectFolderPath
)

# Trim the project folder path to remove leading/trailing spaces
$projectFolderPath = $projectFolderPath.Trim()

# Extract the project folder name for output file
$folderName = [System.IO.Path]::GetFileName($projectFolderPath.TrimEnd('\'))
$outputFilePath = "$folderName-scan-results.txt"
$jsonOutputPath = "$folderName-scan-results.json"
$csvOutputPath = "$folderName-scan-results.csv"

# Initialize matches array
$allMatches = @()

# Define detection patterns and rules
$patterns = @(
    @{
        Type = "Shellcode Patterns" 
        Patterns = @(
            "\b(?:[0-9a-fA-F]{2}[\s,]+){8,}\b", # Basic hex sequences
            "\\x[0-9a-fA-F]{2}(?:\\x[0-9a-fA-F]{2}){7,}", # \x format shellcode
            "(?:%u[0-9a-fA-F]{4}){4,}", # Unicode shellcode patterns
            "\b(?:0x[0-9a-fA-F]{8,})\b", # Memory addresses and long hex values
            "\b(?:mov|push|pop|call|jmp|ret)\s+(?:eax|ebx|ecx|edx|esi|edi)\b" # Assembly instructions
        )
        Whitelist = @(
            # .NET runtime and interop patterns
            'System\.Runtime\.InteropServices',
            'DllImport\(.+?\)',
            'Marshal\.(Copy|Alloc)',
            
            # Legitimate PowerShell API calls
            'Add-Type',
            'VirtualAlloc',
            'CreateThread', 
            'WaitForSingleObject',
            
            # Common programming constructs
            '(?:public|private|protected)\s+(?:class|struct|enum)',
            '(?:function|def|sub)\s+\w+\s*\(',
            
            # Hash values and crypto patterns
            '[A-Fa-f0-9]{32,}',
            '0x[0-9A-Fa-f]+(?:\s*,\s*0x[0-9A-Fa-f]+){0,3}',
            
            # Memory allocation and pointer operations
            '(?:malloc|free|new|delete)\s*\([^)]*\)',
            '(?:memcpy|memset|memmove)\s*\([^)]*\)'
        )
    },
    @{
        Type = "Malware Signatures"
        Patterns = @(
            # Process Creation & Manipulation
            "NtCreateThreadEx",
            "ZwCreateThreadEx",
            "RtlCreateUserThread",
            "NtQueueApcThread",
            "ZwQueueApcThread",
            "OpenThread",
            "NtTerminateProcess",
            "ZwTerminateProcess",
        
            # Memory Operations
            "NtWriteVirtualMemory",
            "ZwWriteVirtualMemory",
            "NtMapViewOfSection",
            "ZwMapViewOfSection",
            "VirtualAlloc.*MEM_COMMIT.*PAGE_EXECUTE",
            "memmove",
            "RtlCopyMemory",
        
            # Code Injection
            "QueueUserAPC",
            "NtQueueApcThread",
            "ZwQueueApcThread",
            "SetWindowsHookEx",
            "MapViewOfFile.*WriteProcessMemory",
            "VirtualAllocEx.*WriteProcessMemory.*CreateRemoteThread",
        
            # DLL/Module Operations
            "FreeLibrary",
            "LdrUnloadDll",
            "GetModuleFileName",
            "NtQuerySystemInformation.*SystemModuleInformation",
            "EnumProcessModules",
            "NtQueryVirtualMemory",
            "ZwQueryVirtualMemory",
        
            # PowerShell/Script Execution
            "ScriptBlock\.Create",
            "EncodedCommand",
            "[Convert]::FromBase64String",
            "[System.Text.Encoding]::(Unicode|ASCII|UTF8)\.GetString",
            "IEX\s*\(\s*\[System\.Text\.Encoding\]::(ASCII|Unicode|UTF8)\.GetString",
            "Invoke-Obfuscation",
            "Invo" + "ke-" + "Mi" + "mik" + "atz",
            "Invoke-WMIMethod",
        
            # Anti-Analysis/Evasion
            "NtSetInformationThread.*ThreadHideFromDebugger",
            "ZwSetInformationThread.*ThreadHideFromDebugger",
            "SetLastError",
            "RtlGetLastWin32Error",
            "GetComputerName.*(GetTickCount|GetSystemTime)",
            "Process\.GetProcesses",
            "GetForegroundWindow",
            "FindWindowEx",
        
            # Network Operations
            "CreateUrlCacheEntry",
            "InternetSetOption",
            "DnsQuery",
            "getaddrinfo",
            "gethostbyname",
            "WS2_32\.dll.*(socket|connect|send|recv)",
            "WinINet\.dll.*(InternetOpen|InternetConnect)",
            "WebClient\.DownloadString",
            "WebClient\.DownloadFile",
            "DownloadData",
            "System\.Net\.Sockets\.TcpClient",
        
            # Registry Operations
            "NtQueryKey",
            "ZwQueryKey",
            "NtEnumerateKey",
            "ZwEnumerateKey",
            "RegQueryValueEx",
            "NtQueryValueKey",
            "ZwQueryValueKey",
            "RegEnumKeyEx",
            "RegOpenKeyEx.*(CurrentVersion\\Run|MACHINE\\SOFTWARE\\Microsoft)",
        
            # File Operations
            "SetFileAttributes",
            "NtSetInformationFile",
            "ZwSetInformationFile",
            "MoveFileEx.*MOVEFILE_DELAY_UNTIL_REBOOT",
            "GetTempFileName",
            "GetTempPath",
            "NtCreateDirectoryObject",
            "ZwCreateDirectoryObject",
            "ReadFile",
        
            # Persistence Mechanisms
            "(HKCU|HKLM)\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run",
            "(HKCU|HKLM)\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce",
            "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellServiceObjects",
            "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects",
            "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit",
            "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell",
            "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
            "HKLM\\SYSTEM\\CurrentControlSet\\Services",
            "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders",
            "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
        
            # UAC Bypass
            "ISecurityEditor",
            "cmstplua\.dll",
            "DismCore\.dll",
            "wusa\.exe.*/extract",
            "pkgmgr\.exe.*/quiet",
            "eventvwr\.exe",
            "fodhelper\.exe",
            "computerdefaults\.exe",
            "sdclt\.exe",
        
            # Credential Access
            "SamIConnect",
            "SamIGetPrivateData",
            "SamEnumerateUsersInDomain",
            "LsaOpenPolicy",
            "NetUserEnum",
            "NetLocalGroupEnum",
            "WNetEnumResource",
            "CredEnumerate",
            "CredReadW",
            "LsaRetrievePrivateData",
            "NtQueryKey.*SAM",
            "BCryptDeriveKey",
            "CryptAcquireContext",
            "CryptCreateHash",
            "CryptHashData",
            "CryptDeriveKey",
            "CryptGenKey",
            "CryptDecrypt",
            "CryptEncrypt",
        
            # Living Off The Land
            "certutil\.exe.*-urlcache",
            "netsh\.exe.*advfirewall",
            "rundll32\.exe.*,Control_RunDLL",
            "wmic\.exe.*(process call create|os get|shadowcopy)",
            "regsvr32\.exe.*/s.*/u.*/i",
            "mshta\.exe.*vbscript",
            "forfiles\.exe.*/p.*/m.*/c",
            "WMIC\.exe.*(process call create|os get|shadowcopy)",
            "bitsadmin\.exe.*/transfer",
        
            # Cobalt Strike/Empire/Metasploit Indicators
            "beacon\.dll",
            "metsrv\.dll",
            "ReflectiveLoader",
            "injected\.dll",
            "empire\.ps1",
            "met_inject",
            "VirtualAlloc\s*\(\s*0,\s*([0-9]{3,}),",
        
            # Cryptomining
            "stratum\+tcp://",
            "xmrig",
        
            # Memory-only Fileless Malware
            "VirtualAlloc\s*\(\s*0,.*PAGE_EXECUTE_READWRITE.*\)",
            "NtProtectVirtualMemory.*PAGE_EXECUTE",
            "VirtualProtect.*PAGE_EXECUTE",
        
            # Mobile Code (HTML/JS)
            "document\.write\s*\(\s*(unescape|atob|String\.fromCharCode)",
            "String\.fromCharCode\s*\(\s*([0-9]{2,3}\s*,\s*){10,}",
            "eval\s*\(\s*(unescape|atob|String\.fromCharCode)",
        
            # COM Hijacking
            "DllRegisterServer",
            "DllUnregisterServer",
            "CLSIDFromProgID",
            "CoCreateInstance",
            "CoGetClassObject",
        
            # Advanced Evasion
            "VirtualAllocExNuma",
            "RtlExitUserProcess",
            "SetPriorityClass",
            "SystemParametersInfo",
            "GlobalAddAtom",
            "GlobalGetAtomName",
        
            # WMI/WMIC Abuse
            "CIMSession",
            "Get-WmiObject",
            "Invoke-WmiMethod",
            "Get-CimInstance",
            "Set-WmiInstance",
            "Set-CimInstance",
            "wmic\.exe.*(process call create|os get)",
        
            # Named Pipe Creation/Communication
            "CreateNamedPipe",
            "ConnectNamedPipe",
            "CallNamedPipe",
            "ImpersonateNamedPipeClient",
            "\\\\.\\pipe\\[a-zA-Z0-9]{1,10}",
        
            # Process Doppelg√§nging
            "NtCreateTransaction",
            "ZwCreateTransaction",
            "NtRollbackTransaction",
            "ZwRollbackTransaction",
            "NtCreateSection",
            "ZwCreateSection",
        
            # Process Ghosting
            "DeleteFileW.*CreateProcessW",
            "NtOpenFile.*FILE_DELETE_ON_CLOSE",
            "ZwOpenFile.*FILE_DELETE_ON_CLOSE",
        
            # Bootkit/Rootkit Behavior
            "ZwLoadDriver",
            "NtLoadDriver",
            "NtSetSystemInformation",
            "ZwSetSystemInformation",
            "IoCreateDriver",
            "DbgPrintEx",
            "MmMapIoSpace",
            "PsCreateSystemThread",
            "PsSetLoadImageNotifyRoutine",
        
            # Process Masquerading
            "svchost\.exe(?!.*\\Windows\\System32)",
            "lsass\.exe(?!.*\\Windows\\System32)",
            "csrss\.exe(?!.*\\Windows\\System32)",
            "explorer\.exe(?!.*\\Windows)",
            "winlogon\.exe(?!.*\\Windows\\System32)",
            "spoolsv\.exe(?!.*\\Windows\\System32)",
            "smss\.exe(?!.*\\Windows\\System32)",
            "services\.exe(?!.*\\Windows\\System32)",
            "wininit\.exe(?!.*\\Windows\\System32)",
        
            # Suspicious File Locations
            "\\Users\\[^\\]+\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\.*\.(exe|bat|vbs|ps1)",
            "\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\.*\.(exe|bat|vbs|ps1)",
            "\\Windows\\Tasks\\.*\.(exe|bat|vbs|ps1)",
            "\\Windows\\debug\\.*\.(exe|dll)",
            "\\Windows\\Temp\\.*\.(exe|dll|bat|ps1|vbs)",
            "\\Windows\\System32\\drivers\\etc\\hosts.*\s+(?!localhost)",
        
            # AMSI/ETW Bypassing
            "AmsiScanBuffer",
            "AmsiScanString",
            "NtTraceEvent",
            "EtwEventWrite",
            "EtwEventRegister",
            "NtWriteVirtualMemory.*amsi\.dll",
            "NtProtectVirtualMemory.*amsi\.dll",
            "[Reflection.Assembly]::GetType.*(System.Management.Automation.AmsiUtils|A.m.s.i.U.t.i.l.s)",
            "System\.Management\.Automation\.AmsiUtils",
            "NtSetInformationThread.*ThreadInformationClass",
            "[System.Runtime.InteropServices.Marshal]::StructureToPtr"
        )

        Whitelist = @(
            # Development Paths
            "(^|/)(gradle|maven|sbt|npm|yarn|dotnet|pip)/[^/]+$",
            "\\src\\(main|test)\\(java|scala|kotlin|csharp|python)",
            "\\project\\target\\scala-[0-9.]+\\",
            "\\WEB-INF\\classes\\",
            "\\META-INF\\",
            "\.github\\workflows\\",
            "\.gitlab-ci\.yml",
            "(Jenkinsfile|Dockerfile|docker-compose\.yml)",
        
            # Safe Development Context
            "(JetBrains|PhpStorm|WebStorm|PyCharm|CLion|GoLand)",
            "(Maven|Gradle|SBT|NPM|Yarn|NuGet|Pip)",
            "(UnitTest|IntegrationTest|E2ETest|SpecTest|TestCase)",
            "(^|\s)@(Test|Before|After|BeforeClass|AfterClass|Autowired)",
        
            # Documentation & Comments
            "(<!--.*-->)",
            "/\*\*\s+\*\s+[A-Z][a-z]+(\s+[a-z]+)+\s+\*/",
            "(///|''')\s+<summary>",
            "(\*|#)\s+@author\s+",
            "(\*|#)\s+@version\s+",
        
            # Known Framework Code
            "org\.springframework",
            "com\.google\.common",
            "org\.apache\.commons",
            "io\.netty",
            "javax\.",
            "org\.junit",
            "org\.mockito",
            "com\.microsoft\.azure",
            "com\.amazonaws",
            "org\.hibernate",
        
            # Legitimate development and testing operations
            "\s*[Ii]mport\s+[a-zA-Z0-9_.]+;\s*$",
            "\s*using\s+[a-zA-Z0-9_.]+;\s*$",
            "\s*require\s*\(.*\);\s*$",
            "\s*from\s+[a-zA-Z0-9_./\-]+\s+import\s+",
            "\s*module\s+[a-zA-Z0-9_.]+\s*{",
            "\s*package\s+[a-zA-Z0-9_.]+;\s*$",
            "unittest\.mock",
            "pytest",
            "mocha",
            "jest",
            "xunit",
            "nunit",
            "testng",
        
            # IDE and build system specific patterns
            "build\.gradle",
            "pom\.xml",
            "\.csproj",
            "\.vcxproj",
            "CMakeLists\.txt",
            "package\.json",
            "tsconfig\.json",
            "webpack\.config\.js",
            "\.eslintrc",
            "\.editorconfig",
        
            # CI/CD systems
            "travis\.yml",
            "circle\.yml",
            "appveyor\.yml",
            "azure-pipelines\.yml",
            "\.github/workflows/",
            "buildspec\.yml",
        
            # Windows Event Log Analysis
            "EventLog\.ReadEvent",
            "EventLog\.WriteEntry",
            "New-EventLog",
            "Get-EventLog",
            "Get-WinEvent",
            "Write-EventLog",
        
            # Documentation generation and code analysis tools
            "doxygen",
            "javadoc",
            "ndoc",
            "sphinx-doc",
            "SonarQube",
            "checkstyle",
            "PMD",
            "ESLint",
            "StyleCop",
        
            # Common debugging/logging patterns
            "System\.Diagnostics\.Debug\.WriteLine",
            "System\.Diagnostics\.Trace\.WriteLine",
            "console\.log\(",
            "console\.debug\(",
            "console\.error\(",
            "console\.warn\(",
            "print\(",
            "printf\(",
            "println\(",
            "log\.(debug|info|warn|error)\(",
            "logger\.(debug|info|warn|error)\("
        )
    },
    @{
        Type = "Webshell Functions"
        Patterns = @(
            # PowerShell Command Execution (Enhanced Context)
            '(?<!\w)(?:Invoke-Expression|IEX)\s*\(\s*(?:\$(?:_|\w+)|\[[^\]]*\]|[''"`].*?(?:Net\.WebClient|Invoke-RestMethod|curl|wget)[''"`])',
            "(?<![a-zA-Z0-9])Invoke-Command\s*(?:-ComputerName\s+[^\s]+\s+-ScriptBlock\s*\{|\s*-ScriptBlock\s*\{\s*(?:Invoke-Expression|IEX|Start-Process))",
            "(?<![a-zA-Z0-9])Start-Process\s*(?:-FilePath\s+['\`"](?:cmd|powershell|wscript|cscript)|.*?-ArgumentList\s+['\`"].*?(?:/c|/k|-enc|-encodedcommand))",
            "(?<![a-zA-Z0-9])(?:Invoke-WmiMethod|Get-WmiObject)\s*(?:-ComputerName\s+[^\s]+\s+-Class\s+(?:Win32_Process|Win32_Service)|.*?-Query\s+['\`"]SELECT\s*\*\s*FROM)",
            "(?<![a-zA-Z0-9])(?:Invoke-RestMethod|Invoke-WebRequest)\s*(?:-Uri\s+['\`"](?:https?|ftp)://[^\s]+['\`"].*?-Method\s+(?:Post|Put)|.*?-Body\s+\$)",
            "(?<![a-zA-Z0-9])Add-Type\s*(?:-TypeDefinition\s+['\`"].*?(?:DllImport|UnmanagedType|System\.Runtime\.InteropServices)['\`"]|-Path\s+['\`"].*?\.(?:dll|exe)['\`"])",
            "(?<![a-zA-Z0-9])\[System\.Reflection\.Assembly\]::(?:Load|LoadFrom|LoadFile)\s*\(\s*(?:\$|\[Convert\]::FromBase64String|File\.ReadAllBytes)",
            "(?<![a-zA-Z0-9])(?:CreateInstance|GetType)\s*\(\s*['\`"]System\.(?:Diagnostics\.Process|Management\.Automation\.PowerShell|Runtime\.InteropServices)['\`"]",
            "(?<![a-zA-Z0-9])ScriptBlock\.Create\s*\(\s*['\`"].*?(?:Invoke-Expression|IEX|Start-Process|New-Object\s+Net\.WebClient)['\`"]",
            "Get-(?:WmiObject|CimInstance)\s+-Query\s+['\`"]SELECT\s*\*\s*FROM\s+(?:Win32_Process|Win32_Service|Win32_ComputerSystem)['\`"]",
            "New-Object\s+(?:Net\.WebClient|System\.Net\.Sockets\.(?:TCP|UDP)Client)\s*;\s*\$\w+\.(?:DownloadString|DownloadFile|Connect)",
            "(?:DownloadString|DownloadFile|UploadFile)\s*\(\s*['\`"](?:https?|ftp)://[^\s]+['\`"]\s*\)",
            "Test-(?:Net)?Connection\s+-ComputerName\s+[^\s]+\s+-Port\s+(?:445|3389|5985|5986)",
            "Net\s+(?:User|Group|LocalGroup)\s+(?:\w+\s+/add|\w+\s+/delete|administrators)",
            "(?:Set|Add)-Content\s+-Path\s+['\`"].*?\.(?:ps1|exe|dll|bat|cmd)['\`"]\s+-Value",
            "Out-File\s+-FilePath\s+['\`"].*?\.(?:ps1|exe|dll|bat|cmd)['\`"]",
            "New-Item\s+-Path\s+['\`"].*?['\`"]\s+-ItemType\s+(?:File|Directory)\s+-Value",
            "(?:Copy|Move|Remove)-Item\s+-Path\s+['\`"].*?(?:\\windows\\system32|\\windows\\syswow64)['\`"]",
            "(?:Compress|Expand)-Archive\s+-Path\s+['\`"].*?['\`"]\s+-DestinationPath\s+['\`"].*?['\`"]",
            "(?:Get|Set|New)-ItemProperty\s+-Path\s+['\`"](?:HKLM|HKCU):\\Software\\Microsoft\\Windows\\CurrentVersion\\(?:Run|RunOnce)['\`"]",
            "(?:New|Start)-Service\s+-Name\s+['\`"]\w+['\`"]\s+-BinaryPathName",
            "\[Convert\]::(?:FromBase64String|ToBase64String)\s*\(\s*['\`"].*?['\`"]\s*\)",
            "\[System\.Text\.Encoding\]::(?:UTF8|ASCII|Unicode)\.GetString\s*\(\s*\[Convert\]::FromBase64String",
            "System\.Convert\.ToBase64String\s*\(\s*\[System\.Text\.Encoding\]::(?:UTF8|ASCII|Unicode)\.GetBytes",
            "Enable-PSRemoting\s+(?:-Force|-SkipNetworkProfileCheck)",
            "(?:New|Connect)-PSSession\s+-ComputerName\s+[^\s]+\s+-Credential\s+\$",
            "Set-PSSessionConfiguration\s+-Name\s+Microsoft\.PowerShell\s+-ShowSecurityDescriptorUI",
            "Start-Job\s+-ScriptBlock\s*\{\s*(?:Invoke-Expression|IEX|Start-Process)",
            "Register-(?:ScheduledJob|WmiEvent)\s+-Trigger\s+\$",
            "Reflection\.Emit\.(?:AssemblyBuilder|MethodBuilder|TypeBuilder)",
            "Runspace\.Create\(\)",
            "PowerShell\.(?:Create|AddScript)\s*\(\s*['\`"].*?(?:Invoke-Expression|IEX|Start-Process)['\`"]\)",
            "Get-Process\s+(?:-Name\s+(?:lsass|csrss|winlogon)|.*?\|\s*Stop-Process)",
            "Stop-Process\s+-Name\s+(?:lsass|csrss|winlogon|wininit|smss)",

            # PHP Webshell Patterns
            '(?<!\w)\$(?:_GET|_POST|_REQUEST|_COOKIE)\[(?:''"`)(?:cmd|command|exec|system|assert|eval|code)(?:''"`)]\]',
            '(?<!\w)(?:eval|assert)\s*\(\s*(?:base64_decode|gzinflate|str_rot13|gzuncompress|strrev|urldecode)\s*\(\s*\$_(?:GET|POST|REQUEST|COOKIE)\)',
            '\$[a-zA-Z_][a-zA-Z0-9_]*\s*=\s*(?:create_function|assert|eval|base64_decode)\s*\((?:''"`)(?:[^''""`]*?)(?:''"`)(?:\s*,\s*(?:''"`)(?:[^''""`]*?)(?:''"`))?\)',
            '(?:move_uploaded_file|copy)\s*\(\s*\$(?:_FILES|_POST)\[[^\]]+]\[(?:name|tmp_name)]\s*,\s*(?:''"`).*?\.(?:php|phtml|php[3-7]|phar|inc|asp|aspx|jsp|jspx|exe|dll|bat|cmd|sh|ps1)(?:''"`)\)',
            '\$_FILES\[[^\]]+]\[(?:''"`)(?:name|type|tmp_name)(?:''"`)]\s*(?:\.|\+|%2e).*?\.(?:php|phtml|asp|aspx|jsp|jspx|exe|dll|bat|cmd|sh)',
            'file_put_contents\s*\(\s*\$(?:_POST|_GET|_REQUEST)\[[^\]]+].*?(?:php://input|\$_FILES)',
            'fwrite\s*\(\s*fopen\s*\([^,]+,\s*(?:''"`)w(?:\+[bt])?(?:''"`)\s*\)\s*,\s*(?:base64_decode|str_rot13|gzinflate)\s*\(\s*\$_(?:POST|GET|REQUEST)\[[^\]]+]\)',
            'move_uploaded_file\s*\([^,]+,\s*(?:''"`)(?:/tmp/|/var/tmp/|/dev/shm/).*?\.(?:php|phtml|php[3-7]|phar)(?:''"`)\)',
            'file_put_contents\s*\(\s*[^,]+\.(?:php|phtml|php[3-7]|phar|asp|aspx|jsp)\s*,\s*(?:base64_decode|gzinflate|str_rot13)\s*\([^\)]+\)\)',
            'move_uploaded_file\s*\(\s*\$_FILES\[[^\]]+]\[(?:''"`)tmp_name(?:''"`)]\s*,\s*\$(?:_GET|_POST|_REQUEST)\[[^\]]+]\)',
            'file_get_contents\s*\(\s*(?:''"`)(?:php|data|expect|phar)://.*?(?:''"`)\)',
            '(?:fopen|file_get_contents|file_put_contents)\s*\(\s*\$(?:_GET|_POST|_REQUEST)\[[^\]]+]\s*\)',
        
            # ASP.NET File Upload with Context
            'HttpPostedFile(?:Base)?\s*\w+\s*=\s*Request\.Files\[(''|"|`).*?\1\].*?\.(?:aspx?|php|jsp|exe|dll|bat|cmd)',
            'File\.SaveAs\s*\(\s*(?:Server\.MapPath\s*\((''|"|`).*?\1\)|''|"|`.*?(?:''|"|`))\s*\+\s*(?:\w+\.FileName|(''|"|`).*?\.(?:aspx?|php|jsp|exe|dll)\1)',
            'StreamReader\s*\(\s*Request\.Files\[\d+\]\.InputStream\)',
            'BinaryRead\s*\(\s*Request\.TotalBytes\)',
            'Process\.Start\s*\(\s*Request\[(''|"|`).*?\1\]',
            'new\s+ProcessStartInfo\s*\(\s*(?:''|"|`)(?:cmd|powershell|wscript|cscript)(?:''|"|`)',
            'new\s+WebClient\(\)\.(?:DownloadFile|UploadFile)\s*\(\s*Request',
            'Convert\.FromBase64String\s*\(\s*Request\.[^\)]+\)',
            '<%@\s*Page\s+Language\s*=\s*(''|"|`)(?:Jscript|Vbscript)\1.*?%>',
            "(?:Execute|Eval|ExecuteGlobal)\s*\(\s*Request\s*\(['\`"].*?['\`"]\)",
            "System\.Diagnostics\.Process\s*\(\s*Request\s*\(['\`"].*?['\`"]\)",
            "new\s+WebClient\(\)\.(?:DownloadString|DownloadFile|UploadFile)\s*\(\s*Request",
            "Convert\.FromBase64String\s*\(\s*Request\.",
            "<%@\s*Page\s+Language\s*=\s*['\`"](?:Jscript|Vbscript)['\`"].*?%>",
        
            # Java File Upload with Context
            "MultipartFile.*?\.(?:getOriginalFilename|transferTo)\s*\(.*?\.(?:jsp|jspx|php|asp|aspx|exe|dll|bat|sh)",
            "new\s+File\s*\(\s*(?:request\.getParameter|request\.getHeader)\s*\(['\`"].*?['\`"]\)\s*\)",
        
            # JSP Webshell Patterns
            "<%.*?Runtime\.getRuntime\(\)\.exec\s*\(\s*(?:['\`"](?:cmd|sh|bash|powershell)|new\s+String\[\]\s*\{\s*['\`"](?:cmd|sh|bash))[^\)]*\).*?%>",
            "<%.*?ProcessBuilder\s*\(\s*(?:new\s+String\[\]\s*\{|\s*['\`"])\s*(?:cmd(?:\.exe)?|sh|bash|powershell).*?\)\.start\(\).*?%>",
            "<jsp:scriptlet>.*?(?:Runtime\.getRuntime\(\)\.exec|ProcessBuilder|System\.getRuntime)\s*\([^\)]*(?:cmd|sh|bash|powershell)[^\)]*\).*?</jsp:scriptlet>",
            "pageContext\.getResponse\(\)\.getWriter\(\)\.println\s*\(\s*(?:Runtime\.getRuntime\(\)\.exec|ProcessBuilder|System\.getRuntime)\s*\([^\)]*(?:cmd|sh|bash|powershell)[^\)]*\)",
        
            # Python Webshell Patterns
            '(?:os|subprocess)\.(?:system|popen|Popen)\s*\(\s*(?:(?:request\.(?:form|args|cookies|headers)\[.*?\]|input\(\))|[''"`].*?(?:cmd|sh|bash|powershell)[''"`])',
            'exec\s*\(\s*(?:compile\s*\(.*?request\.(?:form|args|cookies|headers)|eval\s*\(.*?request\.(?:form|args|cookies|headers))',
            '__import__\s*\(\s*[''"`](?:os|subprocess|pty|commands|pexpect)[''"`]\s*\)\.(?:system|popen)',
            '(?:pickle|marshal|shelve)\.(?:loads?|dump)\s*\(\s*request\.(?:form|args|cookies|headers)',
            'importlib\.(?:import_module|reload|load_module)\s*\(\s*request\.(?:form|args|cookies|headers)',
            'web\.input\(\)\.(?:shell|cmd|command|exec|system|code)',
            'flask\.request\.(?:form|args|cookies|headers)\[[''"`](?:cmd|shell|exec|system|code)[''"`]\]',
            'django\.http\.request\.(?:POST|GET|COOKIES|META)\[[''"`](?:cmd|shell|exec|system|code)[''"`]\]',
            'open\s*\(\s*(?:request\.(?:form|args|cookies|headers)|[''"`]/(?:etc|var|usr|proc)[''"`])',
            '(?:shutil|os)\.(?:copy|move|rmtree|remove)\s*\(\s*request\.(?:form|args|cookies|headers)',
            'tempfile\.(?:NamedTemporaryFile|SpooledTemporaryFile|TemporaryDirectory)\s*\(\s*dir\s*=\s*[''"`]/(?:tmp|var/tmp|dev/shm)[''"`]',
            'ctypes\.CDLL\s*\(\s*request\.(?:form|args|cookies|headers)',
            'multiprocessing\.Process\s*\(\s*target\s*=\s*(?:eval|exec)',
            'threading\.Thread\s*\(\s*target\s*=\s*(?:eval|exec)',
        
            # Ruby Webshell Patterns
            '(?:system|exec|eval|`)\s*(?:params\[.*?\]|request\.(?:body|query_parameters|cookies)\[.*?\])',
            'Open3\.(?:popen3|capture3|pipeline)\s*\(\s*params\[.*?\]',
            'IO\.(?:popen|read|write)\s*\(\s*params\[.*?\]',
            'Kernel\.(?:system|exec|eval|`)\s*\(\s*params\[.*?\]',
            'Process\.(?:spawn|exec|fork)\s*\(\s*params\[.*?\]',
            'Dir\.(?:glob|entries|foreach)\s*\(\s*params\[.*?\]',
            'File\.(?:read|write|delete|rename|chmod)\s*\(\s*params\[.*?\]',
            'require\s*(?:params\[.*?\]|request\.(?:body|query_parameters|cookies)\[.*?\])',
            'load\s*(?:params\[.*?\]|request\.(?:body|query_parameters|cookies)\[.*?\])',
            '%x\{\s*(?:params\[.*?\]|request\.(?:body|query_parameters|cookies)\[.*?\])\s*\}',
            '\|\s*(?:params\[.*?\]|request\.(?:body|query_parameters|cookies)\[.*?\])\s*\|',
            'ObjectSpace\._id2ref\s*\(\s*params\[.*?\]\s*\.to_i\s*\)',
        
            # Golang Webshell Patterns
            'exec\.Command\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\)|[''"`](?:cmd|sh|bash|powershell)[''"`])',
            'os\.(?:StartProcess|Create)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'syscall\.(?:Exec|StartProcess)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'ioutil\.(?:ReadFile|WriteFile)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'http\.(?:Post|Get|Head|Do)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'plugin\.Open\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'os\.(?:Open|Create|Remove|RemoveAll|Rename|Chmod)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'path\/filepath\.(?:Walk|Join|Abs)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'runtime\.(?:GOMAXPROCS|SetFinalizer)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'reflect\.(?:ValueOf|TypeOf|New|MakeFunc)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))',
            'unsafe\.(?:Pointer|Sizeof|Alignof|Offsetof)\s*\(\s*(?:r\.FormValue\(.*?\)|r\.URL\.Query\(\)\.Get\(.*?\))'
        
            # Generic Dangerous Upload Patterns
            "(?:enctype=['\`"]multipart/form-data['\`"].*?accept=['\`"].*?\.(?:php|asp|aspx|jsp|exe|dll|bat|sh)['\`"])",
            "(?:upload|process)(?:File|Upload).*?\.(?:php|asp|aspx|jsp|exe|dll|bat|sh)",
            "allow(?:File)?Upload\s*=\s*true.*?\.(?:php|asp|aspx|jsp|exe|dll|bat|sh)",
            "(?i)(?:c99|r57|webshell|b374k|weevely)\.(?:php|aspx?|jsp|jspx?|phtml)$",
            "(?i)uploadTempDir\s*=\s*['\`"](?:/tmp|/var/tmp|/dev/shm)['\`"]",
        
            # File Operation Patterns (Web-specific)
            '(?i)\.\.(?:/|\\\\){1,}(?:etc|windows|system32|win\.ini|boot\.ini|system\.ini)',
            '(?i)\.\.(?:/|\\\\){1,}(?:windows/system32|winnt/system32)',
            '(?i)(?:/|\\\\)(?:etc|var|usr|bin|sbin|proc|root|dev|sys|boot)(?:/|\\\\)',
            '(?i)(?:/|\\\\)(?:system32|syswow64|system|config|repair|windows)(?:/|\\\\)',
            '(?i)(?:/|\\\\)(?:program\s*files|users|documents\s*and\s*settings)(?:/|\\\\)',
            '(?i)(?:/|\\\\)(?:passwd|shadow|group|sudoers)$',
            '(?i)(?:/|\\\\)(?:sam|security|system)\.(?:log|dat|sav)$',
            '(?i)(?:/|\\\\)(?:web\.config|global\.asa|php\.ini|my\.cnf)$',
            '(?i)(?:/|\\\\)(?:access\.log|error\.log|debug\.log|server\.log)$',
            '(?i)(?:/|\\\\)(?:\.htaccess|\.htpasswd|\.user\.ini|\.env)$',
            '(?i)(?:/|\\\\)(?:config\.(?:php|inc|xml|json)|settings\.php)$',
            '(?:file_get_contents|fopen|readfile)\s*\(\s*[''"`](?:/|\\\\|\.\.)',
            '(?:include|require|include_once|require_once)\s*\(\s*[''"`](?:/|\\\\|\.\.)',
            '(?:copy|rename|unlink|rmdir|mkdir)\s*\(\s*[''"`](?:/|\\\\|\.\.)',
            '(?i)(?:/|\\\\)(?:temp|uploads|cache|backup)(?:/|\\\\).*?\.(?:php|asp|jsp|exe)',
            '(?i)(?:/|\\\\)(?:images|css|js|static)(?:/|\\\\).*?\.(?:php|asp|jsp|exe)',
            '(?i)(?:/|\\\\)(?:upload|file).*?\.(?:php|asp|jsp|exe)$',
            '(?i)(?:%00|%0d|%0a|%2e%2e|%252e%252e).*?(?:/|\\\\)',
            '(?i)(?:/dev/(?:null|zero|random|urandom))',
            '(?i)(?:/proc/(?:self|meminfo|cpuinfo|version))',
            '(?:file_get_contents|fopen)\s*\(\s*[''"`](?:php|data|expect|phar)://',
            '(?:file_put_contents|fputs)\s*\(\s*[''"`](?:/|\\\\).*?\s*&&\s*',
            '(?:copy|rename|unlink)\s*\(\s*[''"`].*?`.*?`'
        
            # RFI/LFI Patterns
            '(?:include|require|include_once|require_once)\s*\(\s*[''"`](?:https?|ftp|php|data|expect|phar|zip|ssh2|rar|ogg|zlib)://.*?\.(?:php|phtml|php3|php4|php5|php7|phar|inc)[''"`]\s*\)',
            '(?:include|require|include_once|require_once)\s*\(\s*\$(?:_GET|_POST|_REQUEST|_COOKIE)\[[''"`][^''"`]+[''"`]\](?:[^)]*?\.(?:php|phtml|inc)|[^)]*?[''"`])\s*\)',
            '(?:fopen|file_get_contents|readfile)\s*\(\s*[''"`](?:php|data|expect|phar|zip|ssh2|rar|ogg|zlib)://.*?[''"`]\s*\)',
            '(?:include|require|include_once|require_once)\s*\(\s*[''"`](?:\.\./|\.\./|\%2e\%2e\%2f|\%2e\%2e/|\.\.\\|\%2e\%2e\%5c)+[''"`]\s*\)',
            '(?:include|require|include_once|require_once)\s*\(\s*[''"`].*?(?:%00|\\0).*?\.(?:jpg|gif|png)[''"`]\s*\)',
            '\$(?:func|function)\s*=\s*[''"`](?:include|require|include_once|require_once)[''"`]\s*;\s*\$\w+\s*\(',
            '(?:include|require|include_once|require_once)\s*\(\s*(?:basename|dirname)\s*\(\s*\$(?:_GET|_POST|_REQUEST|_COOKIE)',
            'php://(?:filter/(?:convert\.(?:base64-[ed]ncode|quoted-printable-[ed]ncode)|resource=)|input|stdin|memory|temp|fd)',
            '(?:include|require|include_once|require_once)\s*\(\s*[''"`](?:/|\\\\)(?:etc|var|usr|bin|sbin|proc|sys).*?[''"`]\s*\)',
            'importlib\.(?:import_module|reload|load_module)\s*\(\s*(?:request\.(?:args|form|cookies|headers)|input\(\))',
            '__import__\s*\(\s*(?:request\.(?:args|form|cookies|headers)|input\(\))',
            'imp\.(?:load_source|load_module)\s*\(\s*(?:request\.(?:args|form|cookies|headers)|input\(\))',
            '(?:require|load)\s*(?:params\[.*?\]|request\.(?:body|query_parameters|cookies)\[.*?\])',
            'Kernel\.(?:require|load)\s*\(\s*(?:params\[.*?\]|request\.(?:body|query_parameters|cookies)\[.*?\])\s*\)',
            'Class\.forName\s*\(\s*request\.getParameter\s*\([''"`][^''"`]+[''"`]\s*\)',
            'URLClassLoader\s*\(\s*new\s+URL\[\]\s*\{\s*new\s+URL\s*\(\s*request\.getParameter',
            'Server\.Execute\s*\(\s*Request\[[''"`][^''"`]+[''"`]\]\s*\)',
            'Server\.Transfer\s*\(\s*Request\[[''"`][^''"`]+[''"`]\]\s*\)',
            'require\s*\(\s*(?:req\.(?:query|body|params)|process\.argv)\[.*?\]\s*\)',
            '(?:include|require|include_once|require_once)\s*\(\s*(?:base64_decode|urldecode|gzinflate|str_rot13)\s*\(\s*[''"`].*?[''"`]\s*\)\s*\)',
            '(?:include|require|include_once|require_once)\s*\(\s*[''"`](?:\.htaccess|\.htpasswd|web\.config|\.env|config\.php)[''"`]\s*\)',
            '\$\{\s*[''"`](?:include|require|include_once|require_once)[''"`]\s*\}\s*\(',
            '(?:fwrite|file_put_contents)\s*\(\s*[^,]+,\s*(?:file_get_contents|curl_exec|wget)\s*\(\s*\$(?:_GET|_POST|_REQUEST)\['
        )
    
        Whitelist = @(
            # PowerShell Safe Commands
            '(?i)Get-Process\s+-Name\s+(?:notepad|calc|mspaint)',
            '(?i)Start-Process\s+-FilePath\s+[''"`](?:notepad|calc|mspaint)[''"`]',
            '(?i)Test-Connection\s+-ComputerName\s+localhost',
            '(?i)Get-WmiObject\s+-Class\s+Win32_OperatingSystem',

            # Common Development Paths
            '(?i)[\\/](?:src|lib|app|web|public|assets|views|controllers|models|modules)[\\/]',
            '(?i)[\\/](?:vendor|node_modules|bower_components|packages)[\\/]',
            '(?i)[\\/](?:tests?|specs?|mocks?|fixtures)[\\/]',
            '(?i)[\\/](?:docs?|examples?|samples?|documentation)[\\/]',
            '(?i)[\\/](?:css|js|img|images|fonts|static|assets)[\\/]',
            '(?i)[\\/](?:build|dist|cache|temp|tmp|logs?)[\\/]',
            '(?i)[\\/](?:fixtures|sample-data)[\\/]',
        
            # Configuration & Build Files
            '(?i)[\\/](?:composer|package|webpack|grunt|gulp|babel|postcss)\.(?:json|lock|config|js)$',
            '(?i)[\\/](?:README|CHANGELOG|LICENSE|CONTRIBUTING)\.',
            '(?i)[\\/](?:config|settings|bootstrap|autoload)\.(?:xml|yml|yaml|json|ini|php)$',
            '(?i)[\\/](?:\.gitignore|\.env\.example)$',
        
            # Safe File Extensions & Uploads
            '(?i)uploads[\\/].*?\.(?:jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx)$',
            '(?i)media[\\/].*?\.(?:mp3|mp4|avi|mov|wmv)$',
            '(?i)\.(?:conf|ini|json|xml|yml|yaml|css|js|jpg|jpeg|png|gif)$',
        
            # PHP Framework & Safety
            '(?i)(?:Laravel|Symfony|CodeIgniter|Yii2|Drupal|WordPress|CakePHP)[\\/](?:core|vendor)',
            'spl_autoload_register\s*\(\s*function\s*\([^\)]*\)\s*\{\s*(?:include|require)',
            '\$this->load->(?:view|model|library|helper)',
            '(?:include|require)\s*\(\s*(?:ABSPATH|WPINC|__DIR__|dirname\(__FILE__\))',
            '(?:include|require)\s*\(\s*[''"`](?:templates?|views?|partials?)/[^''"`]+\.(?:php|phtml|inc)[''"`]\s*\)',
            'namespace\s+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*(?:\\\\[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)*;',
        
            # ASP.NET & .NET Core
            '(?i)(?:App_Code|App_Data|App_Start|App_Themes)[\\/]',
            '(?i)Microsoft\.AspNetCore\.(?:Http|Mvc|Hosting)',
            '(?i)System\.Web\.(?:Http|Mvc|UI)',
            '<%@\s*(?:Page|Control|Master|Register)\s+',
            '<asp:(?:Content|Label|TextBox|Button|GridView|Repeater)',
        
            # Java & Spring
            '(?i)Spring(?:Boot|Framework|Security|MVC)',
            '(?i)Apache(?:Commons)?FileUpload',
        
            # Testing Frameworks
            '(?i)(?:unittest|pytest|phpunit|rspec|jest|mocha)[\\/]',
            '(?i)(?:UnitTest|TestCase|Mock|Stub|Fixture)\.(?:php|cs|rb|py|js)',
            '(?i)unittest\.(?:TestCase|main)',
            '(?i)pytest\.(?:fixture|mark)',
            '(?i)django\.test\.(?:TestCase|Client)',
            '(?i)flask\.testing\.FlaskClient',
            '(?i)RSpec\.(?:describe|context|it)',
            '(?i)Test::Unit::TestCase',
            '(?i)testing\.(?:T|M|B)',
            '(?i)testify\.(?:suite|assert)',
        
            # File & Upload Safety
            '(?i)ValidateFile(?:Type|Extension|Size|Upload)',
            '(?i)Check(?:File)?(?:Mime)?Type',
            '(?i)Sanitize(?:FileName|Upload|Input)',
            '(?i)Scan(?:File)?(?:ForMalware)',
            '(?i)SecureFile(?:Storage|Provider|Upload)',
            '(?i)FileUpload(?:Validation|Security)',
        
            # IDE & Version Control
            '(?i)[\\/]\.(?:git|svn|hg|vscode|idea|vs)[\\/]',
        
            # Language-Specific Safe Patterns
            # Ruby
            '(?i)Rails\.(?:application|env|root)',
            '(?i)Bundler\.require',
        
            # Golang
            '(?i)go\.(?:mod|sum)',
            '(?i)\_test\.go$',
        
            # License & Copyright
            '(?i)Copyright\s+\(c\)\s+[0-9]{4}',
            '(?i)MIT\s+License',
            '(?i)GNU\s+General\s+Public\s+License'
        )
    },
    @{
        Type = "Hardcoded Secrets"
        Patterns = @(
            # Credentials
            '(?i)(password|passwd|pwd)\s*[:=]\s*["`''][^"`'']+["`'']',
            '(?i)(username|user|uid)\s*[:=]\s*["`''][^"`'']+["`'']',
            '(?i)(api[_-]?key|access[_-]?key|secret[_-]?key)\s*[:=]\s*["`''][^"`'']+["`'']',
        
            # Tokens & Auth
            '(?i)(token|jwt|bearer)\s*[:=]\s*["`''][^"`'']+["`'']',
            '(?i)(auth|oauth)\s*[:=]\s*["`''][^"`'']+["`'']',
        
            # Connection Strings
            '(?i)(connection[_-]?string|conn[_-]?str)\s*[:=]\s*["`''][^"`'']+["`'']',
            '(?i)(jdbc:|mongodb://|redis://|mysql://)[^"`'']+["`'']',
        
            # Private Keys
            '(?i)BEGIN\s+(RSA|DSA|EC|OPENSSH)\s+PRIVATE\s+KEY',
            '(?i)(private[_-]?key|secret[_-]?key)\s*[:=]\s*["`''][^"`'']+["`'']'
        )
    
        Whitelist = @(
            # Java
            '@Value\(["`''].*["`'']\)',
            '@PropertySource',
            'application\.properties',
            'application\.yml',
        
            # .NET
            'appsettings\.json',
            'web\.config',
            'IConfiguration',
            'IOptions<',
            'UserSecrets',
        
            # Python
            'os\.environ\.get',
            'config\.get',
            'settings\.py',
        
            # Node.js
            'process\.env',
            '\.env',
            'config\.js',
        
            # Go
            'os\.Getenv',
            'viper\.Get',
        
            # Test Files
            '[._](test|spec|mock)',
            '(test|spec)/.*\.',
        
            # Example Files
            '\.(example|sample|template)',
            'examples?/',
        
            # Documentation
            '(readme|docs?|documentation)',
            '[._]md$',
        
            # Secret Management
            'vault\.',
            'secrets[_-]manager',
            'key[_-]vault',
            'encrypted[_-]'
        )
    },
    @{
        Type = "Ransomware Indicators"
        Patterns = @(
            # Ransom Note Artifacts
            "(?i)DECRYPT(?:ION)?[-_\s]*(?:INSTRUCTION|MANUAL|INFO|NOTE|YOUR_FILES)\.(txt|html|htm|hta)",
            "(?i)(?:YOUR_FILES|IMPORTANT|DATA|ALL_FILES)[-_\s]*(?:ARE|HAVE|BEEN)[-_\s]*(?:ENCRYPTED|LOCKED)",
            "(?i)(?:README|READ_ME|HOW_TO|RECOVER|HELP)[-_\s]*(?:DECRYPT|RECOVER|UNLOCK)\.(txt|html|hta)",
            "(?i)(?:BITCOIN|BTC|MONERO|XMR|PAYMENT|RANSOM)[-_\s]*(?:DEMAND|INSTRUCTION)",
        
            # File Extension Patterns
            "(?i)ForceChangeExtension\s*\(\s*[""'].+?[""']\s*,\s*[""']\.[a-z0-9]{3,8}[""']\s*\)",
            "(?i)RenameFile.*\.(?:encrypted|locked|crypted|enc|vault|ransom|[a-z0-9]{3,8})",
        
            # System Tampering
            "(?i)vssadmin.*delete.*shadows",
            "(?i)bcdedit.*(?:bootstatuspolicy|recoveryenabled|ignoreallfailures)",
            "(?i)wbadmin.*delete.*(?:backup|catalog)",
            "(?i)reagentc\s*/disable",
            "(?i)delete.*(?:SystemBackup|RecoveryPoint|Restore)",
        
            # Security Service Disabling
            "(?i)(?:sc|net).*stop.*(?:WinDefend|MsMpSvc|wscsvc|wuauserv|EPSecurityService)",
            "(?i)reg.*add.*(?:HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System|HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Features)",
            "(?i)Set-MpPreference.*(?:DisableRealTimeMonitoring|DisableIOAVProtection)",
        
            # Encryption Function Patterns (with safeguards for legitimate use)
            "(?i)AES.*(?:EncryptFile|ProcessDirectory|CryptData).*PASSWORD",
            "(?i)(?:FileEncrypt|DirectoryRecursion).*(?:Ransom|Crypto)",
            "(?i)(?:LockAll|EncryptAll|ProcessAllFiles).*(?:SetKey|SetPassphrase)",
        
            # Command Execution Patterns
            "(?i)cmd\.exe\s*/c\s*(?:del|rmdir)\s*/s\s*/q\s*(?:C:\\Windows\\.*Backup|.*\\Shadow)",
            "(?i)powershell\.exe\s*-(?:Exec|Command)\s*Bypass\s*.*(?:Stop-Service|Remove-Item)"
        )
    
        Whitelist = @(
            # Legitimate Cryptography Libraries
            "(?i)System\.Security\.Cryptography\.(?:Aes|RSA|DSA|ECDSA)",
            "(?i)javax\.crypto\.(?:Cipher|KeyGenerator)",
            "(?i)openssl_(?:encrypt|decrypt)",
            "(?i)ssh-keygen",
            "(?i)libsodium",
            "(?i)bouncycastle",
        
            # Development & Testing
            "(?i)(?:test|sample|demo|example).*(?:encrypt|decrypt)",
            "(?i)(?:crypto|cipher).*(?:test|unittest|spec)",
            "(?i)mock.*encryption",
            "(?i)encryption.*example",
        
            # Documentation & Comments
            "(?i)\/\/.*(?:encrypt|decrypt)",
            "(?i)\/\*.*(?:encryption|decryption).*\*\/",
            "(?i)#\s*(?:README|CHANGELOG)",
            "(?i)(?:crypto|encryption).*tutorial",
        
            # Security Tools & Legitimate Operations
            "(?i)\\Windows\\System32\\",
            "(?i)\\Windows\\SoftwareDistribution\\",
            "(?i)net\s+stop\s+(?:spooler|wuauserv|bits|cryptsvc)\s+\/y",
            "(?i)gpg\s+--(?:encrypt|decrypt)",
            "(?i)cipher\s+\/[a-z]\s+",
        
            # Educational Context
            "(?i)(?:course|learning|training).*encryption",
            "(?i)encryption.*(?:101|basics|fundamentals)",
        
            # Backup & Recovery Legitimate Usage
            "(?i)(?:backup|archive|restore).*(?:encryption|password)",
            "(?i)recovery.*encrypted.*(?:data|file|backup)"
        )
    },
    @{
            Type = "Remote Execution and Lateral Movement" 
            Patterns = @(
                # PsExec usage
                '(?i)PSExec(?:\.exe)?\\s+(?:-[su]\\s+|-(?:accepteula|c|d|e|f|h|i|l|n|p|r|s|u|v|w|x)\\s+|\\\\\\\\)',
                '(?i)PSEXESVC',
                
                # PowerShell remoting
                '(?i)Enter-PSSession\\s+-(?:ComputerName|ConnectionUri|VMName)',
                '(?i)Invoke-Command\\s+-(?:ComputerName|ConnectionUri|VMName|ScriptBlock)',
                '(?i)New-PSSession\\s+-(?:ComputerName|ConnectionUri|VMName)',
                '(?i)WSManProvProvider',
                '(?i)WSManProvHost\.exe',
                
                # WMI execution
                '(?i)(?:wmic|Get-WmiObject)\\s+(?:-ComputerName|/node:)\\s+[^\\s]+\\s+(?:process\\s+call\\s+create|process\\s+list|service\\s+(?:create|start))',
                '(?i)Invoke-WmiMethod\\s+-(?:ComputerName|Class)\\s+.*?Win32_Process.*?-Name\\s+Create',
                
                # SCM remote service creation
                '(?i)sc\\s+(?:\\\\\\\\[^\\s]+\\s+)?create\\s+.*?binpath=',
                '(?i)reg\\s+(?:add|copy|import|load|restore|save)\\s+(?:\\\\\\\\[^\\s]+\\\\)?',
                
                # Remote tunneled RDP
                '(?i)plink\.exe\\s+-[LDCNRPSWs]\\s+.*?-[LDCNRPSWs]\\s+(?:3389|rdp)',
                '(?i)(?:ssh|netsh)\\s+.*?portproxy.*?(?:3389|rdp)',
                '(?i)ngrok\\s+(?:tcp|http)\\s+(?:3389|rdp)',
                
                # Virtual drive mounting
                '(?i)\\AppData\\Local\\Temp\\(?:7zo|Rar\\$|\.zip|Temp1_).*?\.(iso|img|vhd|vhdx|wim)$',
                '(?i)ImDisk\.exe.*?-a',
                '(?i)Mount-DiskImage',
                '(?i)HKEY_CLASSES_ROOT\\\\SystemFileAssociations\\\\.iso\\\\shell\\\\mount',
                
                # Files executed from archives without extraction
                '(?i)\\AppData\\Local\\Temp\\7zO.*?\\.[a-zA-Z0-9]{2,4}$',
                '(?i)\\AppData\\Local\\Temp\\Rar\\$.*?\\.[a-zA-Z0-9]{2,4}$',
                '(?i)\\AppData\\Local\\Temp\\Temp1_.*?\\.[a-zA-Z0-9]{2,4}$',
                
                # Browser-based exfiltration
                '(?i)UserAgent.*?OneDriveMpc-Transform_Zip/1\.0',
                '(?i)OneDrive_[0-9]{4}_[0-9]{2}_[0-9]{2}\.zip$',
                
                # PowerShell web requests
                '(?i)(?:Invoke-WebRequest|IWR|Net\.WebClient).*?(?:Post|Put|UploadFile|UploadString|UploadData)',
                '(?i)(?:Invoke-RestMethod).*?-Method\\s+(?:Post|Put)',
                
                # Python-based exfiltration
                '(?i)(?:python|pythonw|py)\.exe.*?(?:requests|http|urllib|socket)\..*?(?:post|put|send|connect)',
                '(?i)(?:python|pythonw|py)\.exe.*?(?:rpivot|chisel|frp)',
                
                # Archive creation for data staging
                '(?i)(?:\.part[0-9]{1,}\.rar|\.7z\.[0-9]{1,})',
                '(?i)(?:tar|zip|gzip|7z|rar)\\s+(?:-cf|a)\\s+.*?\.(?:tar|zip|gz|7z|rar)',
                
                # Email rule creation for BEC
                '(?i)(?:New-InboxRule|Set-InboxRule|Enable-InboxRule).*?(?:DeleteMessage|MarkAsRead)',
                '(?i)RuleName.*?(?:^[^a-zA-Z0-9]*$)',
                
                # Suspicious workstation names
                '(?i)\\bRemoteDeviceName\\s*=\\s*["''](?:DESKTOP|LAPTOP|WIN)-[a-zA-Z0-9]+["'']',
                '(?i)\\bWorkstationName\\s*=\\s*["''](?:DESKTOP|LAPTOP|WIN)-[a-zA-Z0-9]+["'']',
                
                # Service account misuse
                '(?i)\\bLogonType\\s*=\\s*["''](?:RemoteInteractive|10)["''].*?(?:svc|service)',
                
                # Password reuse or cleartext
                '(?i)net\\s+user\\s+.*?\\s+\\S+\\s+/add',
                '(?i)(?:/U|/User|/username|-u|-user|--user|--username)\\s+.*?(?:/P|/password|/pass|-p|-password|-pw|-pass|--pass|--password)',

                # Suspicious network traffic from common Windows programs
                '(?i)\\bInitiatingProcessFileName\\s*=\\s*["''](?:rundll32|regsvr32|wmic|mshta|cscript|wscript)\.exe["''].*?RemoteIPType\\s*=\\s*["'']Public["'']',
                
                # Uncommon TLDs
                '(?i)\\bRemoteUrl\\s*=\\s*["'']https?://[^\\s/]+\.(?:top|xyz|club|cc|shop|icu|vip|work|ml|ga|tk|cf)["'']',
                
                # Non-standard ports for HTTP/HTTPS
                '(?i)\\bRemoteUrl\\s*=\\s*["'']https?://[^\\s/]+:[^443|80]\\d{1,5}["'']',
                
                # LOLBAS with network capabilities
                '(?i)\\bInitiatingProcessFileName\\s*=\\s*["''](?:certutil|bitsadmin|desktopimgdownldr|esentutl|expand|extexport|makecab|replace|sqlps)\.exe["''].*?(?:RemoteIPType\\s*=\\s*["'']Public["''])',
                
                # Suspicious Python network connections
                '(?i)\\bInitiatingProcessFileName\\s*=\\s*["''](?:python|pythonw|py|pyw)\.exe["''].*?(?:RemoteIPType\\s*=\\s*["'']Public["''])',
                
                # Base64 in URLs - potential obfuscation
                '(?i)\\bRemoteUrl\\s*=\\s*["'']https?://[^\\s/]+/[a-zA-Z0-9+/]{20,}={0,2}["'']',
                
                # Scheduled tasks with command line interpreters
                '(?i)\\bInitiatingProcessFileName\\s*=\\s*["''](?:taskeng|svchost)\.exe["''].*?ProcessCommandLine.*?(?:cmd\.exe|powershell\.exe|pwsh\.exe|wmic\.exe|mshta\.exe|cscript\.exe|wscript\.exe)',
                
                # Scheduled tasks with suspicious timing
                '(?i)schtasks.*?/create.*?/st\\s+(?:00:|01:|02:|03:|04:)',
                '(?i)schtasks.*?/create.*?/sc\\s+(?:ONCE|ONSTART|ONLOGON|ONIDLE)',
                
                # WMI persistence
                '(?i)wmic.*?/namespace:\\\\\\\\root\\\\subscription',
                '(?i)Set-WmiInstance.*?-Class\\s+(?:__EventFilter|CommandLineEventConsumer|__FilterToConsumerBinding)',
                '(?i)mofcomp.*?\.mof',
                
                # PowerShell based WMI execution
                '(?i)Invoke-WmiMethod.*?-Class\\s+(?:Win32_Process|Win32_Service).*?-Name\\s+(?:Create|Change)',
                '(?i)Get-WmiObject.*?-Class\\s+(?:Win32_Process|Win32_Service).*?-ComputerName',
                
                # WMI command execution
                '(?i)wmic.*?process\\s+call\\s+create',
                '(?i)wmic.*?os\\s+get\\s+/FORMAT:',
                '(?i)wmic.*?shadowcopy',

                # WMI Event Consumer usage for code execution
                '(?i)ActiveScriptEventConsumer.*?ScriptText',
                '(?i)CommandLineEventConsumer.*?CommandLineTemplate',
                
                # WMI Event registration
                '(?i)Register-(?:CimIndicationEvent|WmiEvent)',
                
                # CIM Session creation (potential remote activity)
                '(?i)New-CimSession(?:\\s+-ComputerName|\\s+-Credential)',
                
                # WMI Provider registration or abuse
                '(?i)__Win32Provider',
                
                # WMI subscription namespace access (common for persistence)
                '(?i)\\\\\\\\(?:ROOT|CIMV2)\\\\subscription',
                
                # WMI Query Language (WQL) suspicious queries
                '(?i)SELECT\\s+.*?\\s+FROM\\s+__InstanceCreationEvent',
                '(?i)SELECT\\s+.*?\\s+FROM\\s+Win32_Process\\s+WHERE\\s+Name',
                
                # MOF files with autorecover (persistence)
                '(?i)#pragma\\s+autorecover',
                
                # WMI event query interval (potentially suspicious small intervals)
                '(?i)__IntervalTimerInstruction',
                '(?i)WITHIN\\s+[1-5]\\s+WHERE',
                
                # WMI repository manipulation
                '(?i)\\%WBEMPath\\%\\\\Repository',
                '(?i)objects\\.data',
                '(?i)index\\.btr',
                
                # WMI lateral movement indicators
                '(?i)winrm\\s+invoke\\s+Create.*?Win32_Process',
                '(?i)winrm\\s+enumerate.*?Win32_Process',
                '(?i)winrm\\s+get.*?Win32_OperatingSystem',
                
                # --- WMI Repository File Access ---
                '(?i)(?:objects\\.data|index\\.btr|mapping\\d?\\.map)',
                '(?i)%WBEMPath%\\\\Repository',
                
                # --- WMI MOF File and Namespace Manipulation ---
                '(?i)(?:#pragma\\s+(?:namespace|autorecover))',
                
                # --- WMI Event Pattern Detection ---
                '(?i)(?:__InstanceOperationEvent|__InstanceCreationEvent|__InstanceModificationEvent)\\s+WITHIN',
                '(?i)(?:__FilterToConsumerBinding|ActiveScriptEventConsumer\\.Name|__EventFilter\\.Name)',
                
                # --- WMI Script Content Detection ---
                '(?i)ScriptText\\s*=\\s*[\"''].*?(?:CreateObject|GetObject|ActiveXObject|WScript)',
                '(?i)(?:winmgmts:|StdRegProv)',
                
                # --- WMI Path Component Manipulation ---
                '(?i)(?:NS_|CD_|CI_|IL_)[A-F0-9]{32,}'
            ) 
            Whitelist = @(
                # Legitimate admin tools
                '(?i)\\Program Files(?:\\s\(x86\))?\\(?:Microsoft|Windows)\\',
                '(?i)(?:Enter-PSSession|Invoke-Command|New-PSSession).*?-HostName\\s+localhost',
                '(?i)(?:wmic|Get-WmiObject)\\s+(?:cpu|bios|os)\\s+get\\s+',

                # Legitimate software installations
                '(?i)\\Windows\\Installer\\',
                '(?i)\\Windows\\SoftwareDistribution\\',
                '(?i)\\Windows\\WinSxS\\',
                '(?i)setup\.exe',
                '(?i)install\.exe',
                '(?i)\.msi$',

                # Legitimate file transfers
                '(?i)(?:Invoke-WebRequest|Invoke-RestMethod).*?(?:microsoft\.com|windows\.com|office\.com)',
                '(?i)(?:python|pythonw|py)\.exe.*?(?:pip|requirements|setup\.py)',
                '(?i)\\Windows\\System32\\tar\.exe\\s+(?:-cf|a)\\s+.*?\.tar',

                # Legitimate operations
                '(?i)\\Windows\\System32\\',
                '(?i)net\\s+user\\s+.*?\\s+\\*\\s+/add',
                '(?i)\\b(?:username|user|usr)\\s*=\\s*["'']\\$\\(',

                # Legitimate network traffic
                '(?i)\\bRemoteUrl\\s*=\\s*["'']https?://(?:update\.microsoft\.com|download\.windowsupdate\.com|www\.google\.com|www\.bing\.com|www\.office\.com)["'']',
                '(?i)\\bInitiatingProcessFolderPath\\s*=\\s*["'']C:\\\\Program Files(?:\\s\(x86\))?\\\\[^\\\\]+["'']',

                # Legitimate scheduled tasks
                '(?i)schtasks.*?/create.*?/tr\\s+["''].*?\\\\Program Files\\\\["'']',
                '(?i)wmic.*?process\\s+get',

                # Legitimate WMI operations
                '(?i)Get-WmiObject.*?Win32_ComputerSystem',
                '(?i)Get-CimInstance.*?Win32_OperatingSystem',
                '(?i)SELECT.*?FROM\\s+Win32_ComputerSystem',
                '(?i)New-CimSession\\s+-ComputerName\\s+localhost'
            )
        }
)

function Get-FileHash {
    param (
        [string]$filePath
    )
    
    try {
        $hash = Get-FileHash -Path $filePath -Algorithm SHA256
        return $hash.Hash
    }
    catch {
        return "Could not calculate hash"
    }
}

function Get-FileMetadata {
    param (
        [string]$filePath
    )
    
    try {
        $file = Get-Item $filePath
        return @{
            CreationTime = $file.CreationTime
            LastWriteTime = $file.LastWriteTime
            LastAccessTime = $file.LastAccessTime
            Size = $file.Length
            Extension = $file.Extension
            Hash = Get-FileHash -filePath $filePath
        }
    }
    catch {
        return $null
    }
}

function Test-ValidContext {
    param (
        [string]$content,
        [string]$match,
        [array]$whitelistPatterns
    )
    
    # Get surrounding context (expanded to 100 characters before and after)
    $contextStart = [Math]::Max(0, $content.IndexOf($match) - 100)
    $contextLength = [Math]::Min(200, $content.Length - $contextStart)
    $surroundingContext = $content.Substring($contextStart, $contextLength)
    
    # Check if surrounding context matches excluded patterns
    if (Is-ExcludedContext -text $surroundingContext) {
        return $false
    }
    
    # Check if in comments (better comment detection)
    $lineStart = $content.LastIndexOf("`n", $content.IndexOf($match)) + 1
    if ($lineStart -eq 0) { $lineStart = 0 }
    $lineEnd = $content.IndexOf("`n", $content.IndexOf($match))
    if ($lineEnd -eq -1) { $lineEnd = $content.Length }
    $line = $content.Substring($lineStart, $lineEnd - $lineStart).Trim()
    
    # Skip if in comments
    if ($line -match '^\s*(?:\/\/|#|''|\/\*|\*)') {
        return $false
    }
    
    # Check if in test files
    if ($content -match '(?i)(?:test|spec|mock)(?:\.(?:cs|java|py|js|php|rb)|s\/)' -or 
        $content -match '(?i)(?:unittest|pytest|phpunit|rspec|jest|mocha)') {
        return $false
    }
    
    # Check whitelist patterns with better context
    foreach ($whitePattern in $whitelistPatterns) {
        # For exact match
        if ($whitePattern -eq $match) {
            return $false
        }
        
        # For regex match in context
        $escapedPattern = [regex]::Escape($whitePattern)
        $escapedMatch = [regex]::Escape($match)
        
        # Check if whitelist pattern appears within 200 chars of the match
        if ($surroundingContext -match $escapedPattern) {
            return $false
        }
        
        # Check if this is inside a whitelisted code block
        $previousContext = $content.Substring(0, $contextStart)
        if ($previousContext -match "(?s)$escapedPattern.*?\b$escapedMatch\b") {
            return $false
        }
    }
    
    return $true
}

function Is-ExcludedContext {
    param (
        [string]$text
    )
    return $text -match $excludedRegex
}


# Initialize scan statistics
$scanStats = @{
    StartTime = Get-Date
    TotalFiles = 0
    ScannedFiles = 0
    MatchesFound = 0
    ErrorCount = 0
    Errors = @()
}

# Create progress bar
$progressParams = @{
    Activity = "Scanning files for suspicious patterns"
    Status = "Initializing..."
    PercentComplete = 0
}

# Output the project folder path
Write-Host "Starting scan in path: '$projectFolderPath'" -ForegroundColor Green
Write-Host "Initializing scan..." -ForegroundColor Yellow

# Define a central list of excluded patterns
$excludedPatterns = @(
    # Development paths and files
    'composer', 'autoload', 'vendor', 'cache', 'generated', 
    'test', 'mock', 'example', 'package', 'namespace', 
    'class', 'function', 
    'node_modules', 'bower_components', 'dist', 'build',
    'vendor\/[^\/]+', '\.git\/', '\.svn\/', '\.vscode\/',
    
    # Code documentation and comments
    '^\s*//',       # Single-line comments starting with //
    '\*',           # Block comments 
    '^\s*\*',       # Line starting with * (often used in block comments)
    '\/\*.*?\*\/',  # Complete block comments
    '#pragma', '#include', '#define', '#ifdef', '#endif',
    '@param', '@return', '@throws', '@since', '@deprecated',
    
    # Common programming constructs
    '\s*if\s*\(',   # If conditions
    '\s*=\s*\(',    # Assignment operations
    'return\s+',    # Return statements
    'else\s*\{',    # Else blocks
    'switch\s*\(',  # Switch statements
    'case\s+',      # Case statements
    'function\s+\w+\s*\(', # Function declarations
    'public\s+(?:static\s+)?(?:void|int|string|bool|float)', # Method declarations
    
    # Framework-specific code
    'Microsoft\.', 'System\.', 'Windows\.', 'Runtime\.',
    'React', 'Angular', 'Vue', 'Express', 'Django',
    'Laravel', 'Symfony', 'Spring', 'Hibernate', 'jQuery',
    
    # Build and configuration files
    'package\.json', 'webpack\.config', 'composer\.json',
    'pom\.xml', 'build\.gradle', 'Makefile', 'CMakeLists\.txt',
    'tsconfig\.json', '.+\.csproj', '.+\.vcxproj', 'Dockerfile',
    'docker-compose\.yml', '\.gitignore'
)

# Convert to a regex pattern (case-insensitive)
$excludedRegex = "(?i)(" + ($excludedPatterns -join '|') + ")"

# Get and cache the list of files to scan
$files = Get-ChildItem -Path $projectFolderPath -Recurse -Include *.java, *.php, *.cs, *.html, *.js, *.py, *.go, *.cpp, *.c, *.h, *.hpp

# Set total files count
$scanStats.TotalFiles = $files.Count

# Process files using the cached list
$files | ForEach-Object {
    $filePath = $_.FullName
    $scanStats.ScannedFiles++
    
    # Update progress bar
    $progressParams.Status = "Scanning $($_.Name)"
    $progressParams.PercentComplete = ($scanStats.ScannedFiles / $scanStats.TotalFiles * 100)
    Write-Progress @progressParams
    
    try {
        if (Is-ExcludedContext -text $filePath) {
            return
        }
        
        $fileLines = Get-Content -Path $filePath -ErrorAction Stop
        $fileContent = $fileLines -join "`n"
        $metadata = Get-FileMetadata -filePath $filePath
        
        foreach ($patternGroup in $patterns) {
            $vulnerabilityType = $patternGroup.Type
            
            foreach ($pattern in $patternGroup.Patterns) {
                # Use regex to find all matches with their positions
                $regex = [regex]$pattern
                $matches = $regex.Matches($fileContent)
                
                foreach ($match in $matches) {
                    if (Test-ValidContext -content $fileContent -match $match.Value -whitelistPatterns $patternGroup.Whitelist) {
                        # Calculate the correct line number
                        $matchPosition = $match.Index
                        $lineNumber = ($fileContent.Substring(0, $matchPosition) -split '\r?\n').Count
                        
                        $contextStart = [Math]::Max(0, $match.Index - 100)
                        $contextLength = [Math]::Min(200, $fileContent.Length - $contextStart)
                        $context = $fileContent.Substring($contextStart, $contextLength)
                        
                        if (-not (Is-ExcludedContext -text $context)) {
                            $matchObject = [PSCustomObject]@{
                                FilePath = $filePath
                                FileName = Split-Path $filePath -Leaf
                                VulnerabilityType = $vulnerabilityType
                                Pattern = $pattern
                                LineNumber = $lineNumber  # Accurate line number calculation
                                LineText = $fileLines[$lineNumber - 1].Trim()  # Get the actual line text
                                Context = $context
                                Metadata = $metadata
                                MatchValue = $match.Value
                                Severity = switch ($vulnerabilityType) {
                                    "Shellcode Patterns" { "High" }
                                    "Injection Functions" { "High" }
                                    "Remote Execution and Lateral Movement" { "High" }
                                    "Webshell Functions" { "Critical" }
                                    "Math Pattern" { "Medium" }
                                    "Webshell via File Upload" { "Low" }
                                    default { "Low" }
                                }
                                RiskScore = switch ($vulnerabilityType) {
                                    "Shellcode Patterns" { 8 }
                                    "Injection Functions" { 9 }
                                    "Remote Execution and Lateral Movement" { 9 }
                                    "Webshell Functions" { 10 }
                                    "Math Pattern" { 6 }
                                    "Webshell via File Upload" { 4 }
                                    default { 4 }
                                }
                            }
                            
                            $allMatches += $matchObject
                            $scanStats.MatchesFound++
                        }
                    }
                }
            }
        }
    }
    catch {
        $scanStats.ErrorCount++
        $scanStats.Errors += [PSCustomObject]@{
            FilePath = $filePath
            Error = $_.Exception.Message
        }
        Write-Warning "Error processing file $filePath : $($_.Exception.Message)"
    }
}

# Complete the progress bar
Write-Progress @progressParams -Completed

# Calculate scan statistics
$scanStats.EndTime = Get-Date
$scanStats.Duration = $scanStats.EndTime - $scanStats.StartTime
$scanStats.MatchesByType = $allMatches | Group-Object -Property VulnerabilityType | 
    Select-Object @{N='Type';E={$_.Name}}, @{N='Count';E={$_.Count}}

# Create summary report
$summary = @"
Scan Summary Report
==================
Scan Start Time: $($scanStats.StartTime)
Scan End Time: $($scanStats.EndTime)
Duration: $($scanStats.Duration.ToString())
Total Files: $($scanStats.TotalFiles)
Files Scanned: $($scanStats.ScannedFiles)
Matches Found: $($scanStats.MatchesFound)
Errors Encountered: $($scanStats.ErrorCount)

Matches by Vulnerability Type:
$($scanStats.MatchesByType | ForEach-Object { "$($_.Type): $($_.Count)" })

High Risk Findings (Score >= 8):
$($allMatches | Where-Object { $_.RiskScore -ge 8 } | 
    Select-Object -First 10 | 
    ForEach-Object { "- [$($_.Severity)] $($_.FilePath): $($_.VulnerabilityType)" })
"@

# Generate detailed HTML report
$htmlReport = @"
<!DOCTYPE html>
<html>
<head>
    <title>Security Scan Report - $folderName</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { background-color: #f5f5f5; padding: 20px; border-radius: 5px; }
        .summary { margin: 20px 0; }
        .findings { margin: 20px 0; }
        .finding { border: 1px solid #ddd; padding: 10px; margin: 10px 0; border-radius: 5px; }
        .high { border-left: 5px solid #CC0000; }
        .medium { border-left: 5px solid #ffbb33; }
        .low { border-left: 5px solid #00C851; }
        .critical { border-left: 5px solid #9932CC; }
        pre { background-color: #f8f9fa; padding: 10px; border-radius: 3px; overflow-x: auto; }
        .stats { display: flex; justify-content: space-between; flex-wrap: wrap; }
        .stat-box { background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 5px; min-width: 200px; }
    </style>
</head>
<body>
    <div class="header">
        <h1>Security Scan Report</h1>
        <p>Project: $folderName</p>
        <p>Scan Date: $($scanStats.StartTime)</p>
    </div>

    <div class="summary">
        <h2>Scan Statistics</h2>
        <div class="stats">
            <div class="stat-box">
                <h3>Total Files</h3>
                <p>$($scanStats.TotalFiles)</p>
            </div>
            <div class="stat-box">
                <h3>Files Scanned</h3>
                <p>$($scanStats.ScannedFiles)</p>
            </div>
            <div class="stat-box">
                <h3>Matches Found</h3>
                <p>$($scanStats.MatchesFound)</p>
            </div>
            <div class="stat-box">
                <h3>Errors</h3>
                <p>$($scanStats.ErrorCount)</p>
            </div>
        </div>
    </div>

    <div class="findings">
        <h2>Findings</h2>
        $(
            $allMatches | Sort-Object -Property RiskScore -Descending | ForEach-Object {
                @"
                <div class="finding $($_.Severity.ToLower())">
                    <h3>[$($_.Severity)] $($_.VulnerabilityType)</h3>
                    <p><strong>File:</strong> $($_.FilePath)</p>
                    <p><strong>Risk Score:</strong> $($_.RiskScore)/10</p>
                    <p><strong>Pattern:</strong> $($_.Pattern)</p>
                    <p><strong>Line Number:</strong> $($_.LineNumber)</p>
                    <p><strong>Context:</strong></p>
                    <pre>$($_.Context)</pre>
                </div>
"@
            }
        )
    </div>

    <div class="errors" style="margin-top: 20px;">
        <h2>Errors</h2>
        $(
            if ($scanStats.Errors.Count -gt 0) {
                $scanStats.Errors | ForEach-Object {
                    "<div class='finding low'><p><strong>File:</strong> $($_.FilePath)</p><p><strong>Error:</strong> $($_.Error)</p></div>"
                }
            } else {
                "<p>No errors encountered during scan.</p>"
            }
        )
    </div>
</body>
</html>
"@

# Save results
$summary | Out-File -FilePath $outputFilePath
$htmlReport | Out-File -FilePath "$folderName-report.html"
$allMatches | ConvertTo-Json -Depth 10 | Out-File -FilePath $jsonOutputPath
$allMatches | Export-Csv -Path $csvOutputPath -NoTypeInformation

# Display completion message with color coding
Write-Host "`nScan completed!" -ForegroundColor Green
Write-Host "Summary saved to: $outputFilePath" -ForegroundColor Yellow
Write-Host "HTML report saved to: $folderName-report.html" -ForegroundColor Yellow
Write-Host "JSON results saved to: $jsonOutputPath" -ForegroundColor Yellow
Write-Host "CSV results saved to: $csvOutputPath" -ForegroundColor Yellow

# Display quick summary
Write-Host "`nQuick Summary:" -ForegroundColor Cyan
Write-Host "=============" -ForegroundColor Cyan
Write-Host "Total files scanned: $($scanStats.ScannedFiles)" -ForegroundColor White
Write-Host "Total matches found: $($scanStats.MatchesFound)" -ForegroundColor White
Write-Host "Errors encountered: $($scanStats.ErrorCount)" -ForegroundColor White
Write-Host "`nHigh Risk Findings:" -ForegroundColor Red
$allMatches | Where-Object { $_.RiskScore -ge 8 } | 
    Select-Object -First 5 | 
    ForEach-Object { 
        Write-Host "- [$($_.Severity)] $($_.FilePath): $($_.VulnerabilityType)" -ForegroundColor Red
    }

# Create email report if findings exceed threshold
if ($scanStats.MatchesFound -gt 0) {
    $emailBody = @"
Security Scan Alert - High Risk Findings Detected

Project: $folderName
Scan Date: $($scanStats.StartTime)
Total Findings: $($scanStats.MatchesFound)

High Risk Findings:
$($allMatches | Where-Object { $_.RiskScore -ge 8 } | 
    Select-Object -First 10 | 
    ForEach-Object { "- [$($_.Severity)] $($_.FilePath): $($_.VulnerabilityType)" })

Please review the attached HTML report for complete details.
"@

    # Save email content for later use
    $emailBody | Out-File -FilePath "$folderName-email-alert.txt"
}

# Return scan results object
return @{
    Stats = $scanStats
    Matches = $allMatches 
    Summary = $summary
    ReportPath = "$folderName-report.html"
}
