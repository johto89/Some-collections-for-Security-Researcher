Wordpress Plugin SQL injection
(?<!prepare\(('|")SELECT.+FROM.+.('|").*\..*

SQL injection - Text Blocks
'(''|[^'])*'

SQL injection - SQL Statements
\b(ALTER|CREATE|DELETE|DROP|EXEC(UTE){0,1}|INSERT( +INTO){0,1}|MERGE|SELECT|UPDATE|UNION( +ALL){0,1})\b

Evil Regex > RegDos
^([a-zA-Z0-9])(([\-.]|[_]+)?([a-zA-Z0-9]+))*(@){1}[a-z0-9]+[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$
^(([a-z])+.)+[A-Z]([a-z])+$

url
^((((https?|ftps?|gopher|telnet|nntp)://)|(mailto:|news:))(%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@&=+$,A-Za-z0-9])+)([).!';/?:,][[:blank:|:blank:]])?$

IP
^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$

email
^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$

removeSpecialCharacters
replace(/!|@|%|\^|\*|\(|\)|\+|\-|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|$|_|“|”|‘|’|…|–/g, '');

safetext - Lower and upper case letters and all digits
^[a-zA-Z0-9 .-]+$

date - Date in US format with support for leap years
^(?:(?:(?:0?[13578]|1[02])(\/|-|\.)31)\1|(?:(?:0?[1,3-9]|1[0-2])(\/|-|\.)(?:29|30)\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:0?2(\/|-|\.)29\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:(?:0?[1-9])|(?:1[0-2]))(\/|-|\.)(?:0?[1-9]|1\d|2[0-8])\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$

password - 4 to 8 character password requiring numbers and both lowercase and uppercase letters
^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{4,8}$

complexpassword - 8 to 32 character password requiring at least 3 out 4 (uppercase and lowercase letters, numbers and special characters) and no more than 2 equal characters in a row
^(?:(?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))(?!.*(.)\1{2,})[A-Za-z0-9!~<>,;:_=?*+#."&§%°()\|\[\]\-\$\^\@\/]{8,32}$

PERSON NAME  
^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$

MAC ADDRESS
^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$

HTML HEX CODE
^#?([a-f]|[A-F]|[0-9]){3}(([a-f]|[A-F]|[0-9]){3})?$

PHONE
^(032|033|043|035|036|037|038|039|070|079|077|076|078|083|084|085|081|082|056|058|059|088|089|086|098|097|096|0169|0168|0167|0166|0165|0164|0163|0162|091|094|0123|0124|0125|0127|0129|090|093|0120|0121|0122|0126|0128|092|0188|0993|0994|0995|0996|099|095)(\d{7})$


FLOATING POINT
^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$

GUID
^[A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12}$

REASONABLE DOMAIN NAME
^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}$

RFC 1918 NON ROUTABLE IP
^(((25[0-5]|2[0-4][0-9]|19[0-1]|19[3-9]|18[0-9]|17[0-1]|17[3-9]|1[0-6][0-9]|1[1-9]|[2-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9]))|(192\.(25[0-5]|2[0-4][0-9]|16[0-7]|169|1[0-5][0-9]|1[7-9][0-9]|[1-9][0-9]|[0-9]))|(172\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|1[0-5]|3[2-9]|[4-9][0-9]|[0-9])))\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$

VALID WINDOWS FILENAME
^(?!^(PRN|AUX|CLOCK\$|NUL|CON|COM\d|LPT\d|\..*)(\..+)?$)[^\x00-\x1f\\?*:\";|/]+$

Java Classname
^(([a-z])+\.)+[A-Z]([a-zA-Z])+$

English_daywords
^(Mo|Tu|We|Th|Fr|Sa|Su)$

English_monthwords
^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$

English_digitwords
^(zero|one|two|three|four|five|six|seven|eight|nine)$

HTML tag
<(\"[^\"]*\"|'[^']*'|[^'\">])*>

Visa Card
^4[0-9]{12}(?:[0-9]{3})?$

MasterCard number
^5[1-5][0-9]{14}|^(222[1-9]|22[3-9]\\d|2[3-6]\\d{2}|27[0-1]\\d|2720)[0-9]{12}$

PAN Card number
[A-Z]{5}[0-9]{4}[A-Z]{1}

CVV number
^[0-9]{3, 4}$

12-hour format
(1[012]|[1-9]):[0-5][0-9](\\s)?(?i)(am|pm)

24-hour format
([01]?[0-9]|2[0-3]):[0-5][0-9]

image file extension
([^\\s]+(\\.(?i)(jpe?g|png|gif|bmp))$)

pin code
^[1-9]{1}[0-9]{2}\\s{0, 1}[0-9]{3}$

XSS
<[^\w<>]*(?:[^<>"'\s]*:)?[^\w<>]*(?:\W*s\W*c\W*r\W*i\W*p\W*t|\W*f\W*o\W*r\W*m|\W*s\W*t\W*y\W*l\W*e|\W*s\W*v\W*g|\W*m\W*a\W*r\W*q\W*u\W*e\W*e|(?:\W*l\W*i\W*n\W*k|\W*o\W*b\W*j\W*e\W*c\W*t|\W*e\W*m\W*b\W*e\W*d|\W*a\W*p\W*p\W*l\W*e\W*t|\W*p\W*a\W*r\W*a\W*m|\W*i?\W*f\W*r\W*a\W*m\W*e|\W*b\W*a\W*s\W*e|\W*b\W*o\W*d\W*y|\W*m\W*e\W*t\W*a|\W*i\W*m\W*a?\W*g\W*e?|\W*v\W*i\W*d\W*e\W*o|\W*a\W*u\W*d\W*i\W*o|\W*b\W*i\W*n\W*d\W*i\W*n\W*g\W*s|\W*s\W*e\W*t|\W*i\W*s\W*i\W*n\W*d\W*e\W*x|\W*a\W*n\W*i\W*m\W*a\W*t\W*e)[^>\w])|(?:<\w[\s\S]*[\s\0\/]|['"])(?:formaction|style|background|src|lowsrc|ping|on(?:d(?:e(?:vice(?:(?:orienta|mo)tion|proximity|found|light)|livery(?:success|error)|activate)|r(?:ag(?:e(?:n(?:ter|d)|xit)|(?:gestur|leav)e|start|drop|over)?|op)|i(?:s(?:c(?:hargingtimechange|onnect(?:ing|ed))|abled)|aling)|ata(?:setc(?:omplete|hanged)|(?:availabl|chang)e|error)|urationchange|ownloading|blclick)|Moz(?:M(?:agnifyGesture(?:Update|Start)?|ouse(?:PixelScroll|Hittest))|S(?:wipeGesture(?:Update|Start|End)?|crolledAreaChanged)|(?:(?:Press)?TapGestur|BeforeResiz)e|EdgeUI(?:C(?:omplet|ancel)|Start)ed|RotateGesture(?:Update|Start)?|A(?:udioAvailable|fterPaint))|c(?:o(?:m(?:p(?:osition(?:update|start|end)|lete)|mand(?:update)?)|n(?:t(?:rolselect|extmenu)|nect(?:ing|ed))|py)|a(?:(?:llschang|ch)ed|nplay(?:through)?|rdstatechange)|h(?:(?:arging(?:time)?ch)?ange|ecking)|(?:fstate|ell)change|u(?:echange|t)|l(?:ick|ose))|m(?:o(?:z(?:pointerlock(?:change|error)|(?:orientation|time)change|fullscreen(?:change|error)|network(?:down|up)load)|use(?:(?:lea|mo)ve|o(?:ver|ut)|enter|wheel|down|up)|ve(?:start|end)?)|essage|ark)|s(?:t(?:a(?:t(?:uschanged|echange)|lled|rt)|k(?:sessione|comma)nd|op)|e(?:ek(?:complete|ing|ed)|(?:lec(?:tstar)?)?t|n(?:ding|t))|u(?:ccess|spend|bmit)|peech(?:start|end)|ound(?:start|end)|croll|how)|b(?:e(?:for(?:e(?:(?:scriptexecu|activa)te|u(?:nload|pdate)|p(?:aste|rint)|c(?:opy|ut)|editfocus)|deactivate)|gin(?:Event)?)|oun(?:dary|ce)|l(?:ocked|ur)|roadcast|usy)|a(?:n(?:imation(?:iteration|start|end)|tennastatechange)|fter(?:(?:scriptexecu|upda)te|print)|udio(?:process|start|end)|d(?:apteradded|dtrack)|ctivate|lerting|bort)|DOM(?:Node(?:Inserted(?:IntoDocument)?|Removed(?:FromDocument)?)|(?:CharacterData|Subtree)Modified|A(?:ttrModified|ctivate)|Focus(?:Out|In)|MouseScroll)|r(?:e(?:s(?:u(?:m(?:ing|e)|lt)|ize|et)|adystatechange|pea(?:tEven)?t|movetrack|trieving|ceived)|ow(?:s(?:inserted|delete)|e(?:nter|xit))|atechange)|p(?:op(?:up(?:hid(?:den|ing)|show(?:ing|n))|state)|a(?:ge(?:hide|show)|(?:st|us)e|int)|ro(?:pertychange|gress)|lay(?:ing)?)|t(?:ouch(?:(?:lea|mo)ve|en(?:ter|d)|cancel|start)|ime(?:update|out)|ransitionend|ext)|u(?:s(?:erproximity|sdreceived)|p(?:gradeneeded|dateready)|n(?:derflow|load))|f(?:o(?:rm(?:change|input)|cus(?:out|in)?)|i(?:lterchange|nish)|ailed)|l(?:o(?:ad(?:e(?:d(?:meta)?data|nd)|start)?|secapture)|evelchange|y)|g(?:amepad(?:(?:dis)?connected|button(?:down|up)|axismove)|et)|e(?:n(?:d(?:Event|ed)?|abled|ter)|rror(?:update)?|mptied|xit)|i(?:cc(?:cardlockerror|infochange)|n(?:coming|valid|put))|o(?:(?:(?:ff|n)lin|bsolet)e|verflow(?:changed)?|pen)|SVG(?:(?:Unl|L)oad|Resize|Scroll|Abort|Error|Zoom)|h(?:e(?:adphoneschange|l[dp])|ashchange|olding)|v(?:o(?:lum|ic)e|ersion)change|w(?:a(?:it|rn)ing|heel)|key(?:press|down|up)|(?:AppComman|Loa)d|no(?:update|match)|Request|zoom))[\s\0]*=

Regular Expression to Validate File Path and Extension
^(?:[\w]\:|\\)(\\[a-z_\-\s0-9\.]+)+\.(txt|gif|pdf|doc|docx|xls|xlsx)$

Desialization
(unserialize|parse)\s*\(
(node-serialize|funcster|serialize-to-js|cryo)
(Marshal.load|YAML.load)\s*\(
.*readObject\(.*
java.beans.XMLDecoder
com.thoughtworks.xstream.XStream
.*\.fromXML\(.*\)
com.esotericsoftware.kryo.io.Input
.readClassAndObject\(.*
.readObjectOrNull\(.*
com.caucho.hessian.io
com.caucho.burlap.io.BurlapInput
com.caucho.burlap.io.BurlapOutput
org.codehaus.castor
Unmarshaller
jsonToJava\(.*
JsonObjectsToJava\/.*
JsonReader
ObjectMapper\(
enableDefaultTyping\(\s*\)
@JsonTypeInfo\(
readValue\(.*\,\s*Object\.class
com.alibaba.fastjson.JSON
JSON.parseObject
com.owlike.genson.Genson
useRuntimeType
genson.deserialize
org.red5.io
deserialize\(.*\,\s*Object\.class
\.Yaml
\.load\(.*
\.loadType\(.*\,\s*Object\.class
YamlReader
com.esotericsoftware.yamlbeans
(JavaScript|Xml|(Net)*DataContract)Serializer
(Binary|ObjectState|Los|Soap|Client|Server)Formatter
Json.Net
YamlDotNet
FastJson
Xaml
TypeNameHandling
SimpleTypeResolver
(Serialization|Deerialize|UnsafeDeserialize)
(ComponentModel.Activity|Load|Activity.Load)
ResourceReader
(ProxyObject|DecodeSerializedObject|DecodeValue)
ServiceStack.Text
unserialize
__wakeup
__destruct
unserialize
__wakeup
__destruct

# Purl
Purl [1]|regex|(String\(\w+\)\.split\(\/&\|;\/\)\,\s*function\()

# CanJS deparam
CanJS deparam [1]|regex|(\/\(\[\^\\\[\\\]\]\+\)\|\(\\\[\\\]\)\/g\s*)

# MooTools More
MooTools More [1]|regex|(\.substr\(0,\s*\w+\s*-\s*1\)\.match\(\/\(\[\^\\\]\\?\[\]\+\|\(\\B\)\(\?\=\\\]\)\)\/g\))

# jQuery BBQ
jQuery BBQ [1]|regex|(\$\.each\(\s*\w+\.replace\(\s*\/\\\+\/g\s*,\s*[\'\"] [\'\"]\s*\)\.split\(\s*[\'\"]&[\'\"]\s*\))
jQuery BBQ [2]|regex|jQuery BBQ

# deparam
deparam [1]|regex|(\s*\/\\\[\/\.test\(\s*\w+\[0\]\s*\)\s*&&\s*\/\\\]\$\/\.test\(\s*\w+\[\s*\w+\s*\]\s*\)\s*)
deparam [2]|regex|([\'\"]\[\][\'\"]\s*===\s*\w+\s*\?\s*\w+\.push\(\w+\)\s*:\s*\w+\[\w+\]\s*=\s*\w+)

# backbone query parameters
backbone-query-parameters [2]|regex|(\s*(\w+)\s*=\s*\2\[(\w+)\]\s*=\s*\2\[\3\]\s*\|\|\s*\{\})

# V4Fire Core
V4Fire Core [1]|regex|(\w+\s*=\s*\/\\\[\(\[\^\\\]\]\*\)\]\/g)

# jQuery Sparkle
jQuery Sparkle [1]|regex|(\w+\s*=\s*\w+\.split\(\/\\\&\(amp\\\;\)\?\/\))

# jQuery query-object
jQuery Query-Object [1]|regex|(\/\^\(\[\^\[\]\+\)\(\\\[\.\*\\\]\)\?\$\/\.exec\(\s*\w+\s*\))
jQuery Query-Object [2]|text|/* jQuery querystring plugin */
jQuery Query-Object [3]|text|/^([^[]+?)(\[.*\])?$/.exec(

# queryToObject
queryToObject [1]|regex|(\.match\(\/\(\^\[\^\[\]\+\)\(\\\[\.\*\\\]\$\)\?\/\))

# fera.ai (getJsonFromUrl)
cdn.fera.ai [1]|regex|(\?\s*decodeURIComponent\(\s*\w+\.substr\(\s*\w+\s*\+\s*1\)\)\s*:\s*[\'\"][\'\"])
cdn.fera.ai [2]|text|getFeraActionParams
cdn.fera.ai [3]|text|cdn.fera.ai/js/fera.js

# Segment analytics.js
Segment analytics.js [1]|regex|(\w+\s*=\s*\/\(\\w\+\)\\\[\(\\d\+\)\\\]\/)
Segment analytics.js [2]|regex|(\(\w+\s*=\s*\w+\.exec\(\w+\)\)\s*\?\s*\(\s*\w+\[\w+\[1\]\]\s*=\s*\w+\[\w+\[1\]\]\s*\|\|\s*\[\])

# YUI 3 querystring-parse
YUI 3 querystring-parse [1]|regex|(\/\(\.\*\)\\\[\(\[\^\\\]\]\*\)\\\]\$\/\.exec\(\w+\))

# flow.io
flow.io [1]|regex|(\w+\s*=\s*\/\\\[\?\(\[\^\\\]\[\]\+\)\\\]\?\/g)

# jquery.parseParams.js
jQuery.parseParams.js [1]|regex|(\w+\s*=\s*\w+\.split\(\/\\\.\(\.\+\)\?\/\)\[1\])

# wishpond (decodeQueryString)
wishpond [1]|regex|(\w+\s*=\s*\w+\(\w+\[1\]\.slice\(\w+\s*\+\s*1,\s*\w+\[1\]\.indexOf\([\'\"]\][\'\"],\s*\w+\)\)\))

# Unknown Lib 1
Unknown Lib [1]|regex|(\w+\.replace\(\s*[\'\"]\[\][\'\"]\s*,\s*[\'\"]\[[\'\"]\.concat\()

# Unknown Lib 2 (JS equivalent of PHPs parse_str)
Unknown Lib [2]|regex|(\w+\s*=\s*\w+\.slice\(0,\s*\w+\.indexOf\([\'\"]\\x?0?0[\'\"]\)\))

# Unknown Lib 3
Unknown Lib [3]|regex|("\[\]"\s*===\s*\w+\.substring\(\w+\.length\s*-\s*2\)[\s\?\)\(]*(?:\w+\[)?\w+\s*=\s*\w+\.substring\(0,\s*\w+\.length\s*-\s*2\))

# Unknown Lib 4
Unknown Lib [4]|regex|(\w+\.match\(\/\(\^\[\^\\\[\]\+\)\(\\\[\.\*\\\]\$\)\?\/\))

# Unknown Lib 5
Unknown Lib [5]|regex|(\(\[\^\\\\\[\^\\\\\]\]\+\)\(\(\\\\\[\(\^\\\\\[\^\\\\\]\)\\\\\]\)\*\))

# Unknown Lib 6 (inbound setUrlParams)
Unknown Lib [6]|regex|([\'\"]-1[\'\"]\s*==\s*\w+\[1\]\.indexOf\([\'\"]\[[\'\"]\))

# Unknown Lib 7
Unknown Lib [7]|text|/([^&=]+)=?([^&]*)/g

# Unknown Lib 8
Unknown Lib [8]|text|toeStrFirstUp

# Unknown Lib 9 (queryParamsToObject)
Unknown Lib [9][1]|text|queryParamsToObject
Unknown Lib [9][2]|text|/^[\{\[].*[\}\]]$/

"Slack Token": "(xox[pboa]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})"
"RSA private key": "-----BEGIN RSA PRIVATE KEY-----"
"SSH (DSA) private key": "-----BEGIN DSA PRIVATE KEY-----"
"SSH (EC) private key": "-----BEGIN EC PRIVATE KEY-----"
"PGP private key block": "-----BEGIN PGP PRIVATE KEY BLOCK-----"
"Amazon MWS Auth Token": "amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
"AWS AppSync GraphQL Key": "da2-[a-z0-9]{26}"
"Facebook Access Token": "EAACEdEose0cBA[0-9A-Za-z]+"
"Facebook OAuth": "[fF][aA][cC][eE][bB][oO][oO][kK].{0,20}['|\"][0-9a-f]{32}['|\"]"
"GitHub": "[gG][iI][tT][hH][uU][bB].{0,20}['|\"][0-9a-zA-Z]{35,40}['|\"]"
"Google API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Cloud Platform API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Cloud Platform OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google Drive API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Drive OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google (GCP) Service-account": "\"type\": \"service_account\""
"Google Gmail API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Gmail OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google OAuth Access Token": "ya29\\.[0-9A-Za-z\\-_]+"
"Google YouTube API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google YouTube OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Heroku API Key": "[hH][eE][rR][oO][kK][uU].{0,20}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}"
"Json Web Token" : "eyJhbGciOiJ"
"MailChimp API Key": "[0-9a-f]{32}-us[0-9]{1,2}"
"Mailgun API Key": "key-[0-9a-zA-Z]{32}"
"Password in URL": "[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}[\"'\\s]"
"PayPal Braintree Access Token": "access_token\\$production\\$[0-9a-z]{16}\\$[0-9a-f]{32}"
"Picatic API Key": "sk_live_[0-9a-z]{32}"
"Slack Webhook": "https://hooks\\.slack\\.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}"
"Stripe API Key": "sk_live_[0-9a-zA-Z]{24}"
"Stripe Restricted API Key": "rk_live_[0-9a-zA-Z]{24}"
"Square Access Token": "sq0atp-[0-9A-Za-z\\-_]{22}"
"Square OAuth Secret": "sq0csp-[0-9A-Za-z\\-_]{43}"
"Telegram Bot API Key": "[0-9]+:AA[0-9A-Za-z\\-_]{33}"
"Twilio API Key": "SK[0-9a-fA-F]{32}"
"Github Auth Creds": "https:\/\/[a-zA-Z0-9]{40}@github\.com"
"Twitter Access Token": "[tT][wW][iI][tT][tT][eE][rR].*[1-9][0-9]+-[0-9a-zA-Z]{40}"
"Twitter OAuth": "[tT][wW][iI][tT][tT][eE][rR].*['|\"][0-9a-zA-Z]{35,44}['|\"]"
  "Slack Token": "(xox[pboa]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})"
"RSA private key": "-----BEGIN RSA PRIVATE KEY-----"
"SSH (DSA) private key": "-----BEGIN DSA PRIVATE KEY-----"
"SSH (EC) private key": "-----BEGIN EC PRIVATE KEY-----"
"PGP private key block": "-----BEGIN PGP PRIVATE KEY BLOCK-----"
"Amazon MWS Auth Token": "amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
"AWS AppSync GraphQL Key": "da2-[a-z0-9]{26}"
"Facebook Access Token": "EAACEdEose0cBA[0-9A-Za-z]+"
"Facebook OAuth": "[fF][aA][cC][eE][bB][oO][oO][kK].{0,20}['|\"][0-9a-f]{32}['|\"]"
"GitHub": "[gG][iI][tT][hH][uU][bB].{0,20}['|\"][0-9a-zA-Z]{35,40}['|\"]"
"Google API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Cloud Platform API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Cloud Platform OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google Drive API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Drive OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google (GCP) Service-account": "\"type\": \"service_account\""
"Google Gmail API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Gmail OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google OAuth Access Token": "ya29\\.[0-9A-Za-z\\-_]+"
"Google YouTube API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google YouTube OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Heroku API Key": "[hH][eE][rR][oO][kK][uU].{0,20}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}"
"Json Web Token" : "eyJhbGciOiJ"
"MailChimp API Key": "[0-9a-f]{32}-us[0-9]{1,2}"
"Mailgun API Key": "key-[0-9a-zA-Z]{32}"
"Password in URL": "[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}[\"'\\s]"
"PayPal Braintree Access Token": "access_token\\$production\\$[0-9a-z]{16}\\$[0-9a-f]{32}"
"Picatic API Key": "sk_live_[0-9a-z]{32}"
"Slack Webhook": "https://hooks\\.slack\\.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}"
"Stripe API Key": "sk_live_[0-9a-zA-Z]{24}"
"Stripe Restricted API Key": "rk_live_[0-9a-zA-Z]{24}"
"Square Access Token": "sq0atp-[0-9A-Za-z\\-_]{22}"
"Square OAuth Secret": "sq0csp-[0-9A-Za-z\\-_]{43}"
"Telegram Bot API Key": "[0-9]+:AA[0-9A-Za-z\\-_]{33}"
"Twilio API Key": "SK[0-9a-fA-F]{32}"
"Github Auth Creds": "https:\/\/[a-zA-Z0-9]{40}@github\.com"
"Twitter Access Token": "[tT][wW][iI][tT][tT][eE][rR].*[1-9][0-9]+-[0-9a-zA-Z]{40}"
"Twitter OAuth": "[tT][wW][iI][tT][tT][eE][rR].*['|\"][0-9a-zA-Z]{35,44}['|\"]"
  "Slack Token": "(xox[pboa]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})"
"RSA private key": "-----BEGIN RSA PRIVATE KEY-----"
"SSH (DSA) private key": "-----BEGIN DSA PRIVATE KEY-----"
"SSH (EC) private key": "-----BEGIN EC PRIVATE KEY-----"
"PGP private key block": "-----BEGIN PGP PRIVATE KEY BLOCK-----"
"Amazon MWS Auth Token": "amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
"AWS AppSync GraphQL Key": "da2-[a-z0-9]{26}"
"Facebook Access Token": "EAACEdEose0cBA[0-9A-Za-z]+"
"Facebook OAuth": "[fF][aA][cC][eE][bB][oO][oO][kK].{0,20}['|\"][0-9a-f]{32}['|\"]"
"GitHub": "[gG][iI][tT][hH][uU][bB].{0,20}['|\"][0-9a-zA-Z]{35,40}['|\"]"
"Google API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Cloud Platform API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Cloud Platform OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google Drive API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Drive OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google (GCP) Service-account": "\"type\": \"service_account\""
"Google Gmail API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google Gmail OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Google OAuth Access Token": "ya29\\.[0-9A-Za-z\\-_]+"
"Google YouTube API Key": "AIza[0-9A-Za-z\\-_]{35}"
"Google YouTube OAuth": "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com"
"Heroku API Key": "[hH][eE][rR][oO][kK][uU].{0,20}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}"
"Json Web Token" : "eyJhbGciOiJ"
"MailChimp API Key": "[0-9a-f]{32}-us[0-9]{1,2}"
"Mailgun API Key": "key-[0-9a-zA-Z]{32}"
"Password in URL": "[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}[\"'\\s]"
"PayPal Braintree Access Token": "access_token\\$production\\$[0-9a-z]{16}\\$[0-9a-f]{32}"
"Picatic API Key": "sk_live_[0-9a-z]{32}",
"Slack Webhook": "https://hooks\\.slack\\.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}"
"Stripe API Key": "sk_live_[0-9a-zA-Z]{24}"
"Stripe Restricted API Key": "rk_live_[0-9a-zA-Z]{24}"
"Square Access Token": "sq0atp-[0-9A-Za-z\\-_]{22}"
"Square OAuth Secret": "sq0csp-[0-9A-Za-z\\-_]{43}"
"Telegram Bot API Key": "[0-9]+:AA[0-9A-Za-z\\-_]{33}"
"Twilio API Key": "SK[0-9a-fA-F]{32}"
"Github Auth Creds": "https:\/\/[a-zA-Z0-9]{40}@github\.com"
"Twitter Access Token": "[tT][wW][iI][tT][tT][eE][rR].*[1-9][0-9]+-[0-9a-zA-Z]{40}"
"Twitter OAuth": "[tT][wW][iI][tT][tT][eE][rR].*['|\"][0-9a-zA-Z]{35,44}['|\"]"
